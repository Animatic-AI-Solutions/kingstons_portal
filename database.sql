DROP TABLE IF EXISTS public.available_portfolio_funds CASCADE;
DROP TABLE IF EXISTS public.available_portfolios CASCADE;
DROP TABLE IF EXISTS public.account_holdings CASCADE;
DROP TABLE IF EXISTS public.available_funds CASCADE;
DROP TABLE IF EXISTS public.available_products CASCADE;
DROP TABLE IF EXISTS public.available_providers CASCADE;
DROP TABLE IF EXISTS public.client_accounts CASCADE;
DROP TABLE IF EXISTS public.clients CASCADE;
DROP TABLE IF EXISTS public.fund_performance_history CASCADE;
DROP TABLE IF EXISTS public.holding_activity_log CASCADE;
DROP TABLE IF EXISTS public.irr_values CASCADE;
DROP TABLE IF EXISTS public.fund_valuations CASCADE;
DROP TABLE IF EXISTS public.portfolio_funds CASCADE;
DROP TABLE IF EXISTS public.portfolios CASCADE;
DROP TABLE IF EXISTS public.product_funds CASCADE;
DROP TABLE IF EXISTS public.profiles CASCADE;
DROP TABLE IF EXISTS public.authentication CASCADE;
DROP TABLE IF EXISTS public.sessions CASCADE;

-- =========================================================
-- 1. First level tables with no foreign key dependencies
-- =========================================================

-- User profiles for authentication and identification
create table public.profiles (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  first_name text null,
  last_name text null,
  email text null,
  profile_picture_url text null default '/images/Companylogo2.png'::text,
  preferred_client_view text null default 'list'::text,
  preferred_landing_page text null default '/'::text,
  constraint profile_pkey primary key (id)
) TABLESPACE pg_default;

-- Investment providers (e.g., financial institutions)
create table public.available_providers (
  id bigint generated by default as identity not null,
  name text null,
  status text not null default 'active'::text,
  created_at timestamp with time zone not null default now(),
  constraint available_providers_pkey primary key (id)
) TABLESPACE pg_default;

-- Investment portfolios with their basic information
create table public.portfolios (
  id bigint generated by default as identity not null,
  portfolio_name text null,
  status text null default 'active'::text,
  start_date date null,
  end_date date null,
  created_at timestamp with time zone not null default now(),
  constraint portfolios_pkey primary key (id)
) TABLESPACE pg_default;

-- Wealth management clients
create table public.clients (
  id bigint generated by default as identity not null,
  name text null default ''::text,
  relationship text null default ''::text, -- Relationship type (R, S, T)
  advisor text null,                       -- Assigned financial advisor
  status text null default 'active'::text, -- Client status (active, dormant, inactive)
  created_at timestamp with time zone not null default now(),
  constraint clients_pkey primary key (id)
) TABLESPACE pg_default;

-- =========================================================
-- 2. Second level tables with single dependencies
-- =========================================================

-- Authentication data linked to user profiles
create table public.authentication (
  auth_id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  password_hash text null,                 -- Securely hashed passwords
  last_login timestamp with time zone null,
  updated_at timestamp with time zone null,
  profiles_id bigint null,                 -- Foreign key to profiles
  constraint authentication_pkey primary key (auth_id),
  constraint authentication_profiles_id_fkey foreign KEY (profiles_id) references profiles (id)
) TABLESPACE pg_default;

-- User sessions for authentication persistence
create table public.session (
  session_id text not null,                -- UUID for session identification
  profiles_id bigint null,                 -- Foreign key to profiles
  created_at timestamp with time zone not null default now(),
  expires_at timestamp with time zone null,
  last_activity timestamp with time zone null,
  constraint session_pkey primary key (session_id),
  constraint session_profiles_id_fkey foreign KEY (profiles_id) references profiles (id)
) TABLESPACE pg_default;

-- Financial products offered by providers
create table public.available_products (
  id bigint generated by default as identity not null,
  available_providers_id bigint null,      -- Foreign key to available_providers
  product_name text null,
  product_type text null,                  -- Type of financial product
  status text null default 'active'::text,
  created_at timestamp with time zone not null default now(),
  constraint available_products_pkey primary key (id),
  constraint available_products_available_providers_id_fkey foreign KEY (available_providers_id) references available_providers (id)
) TABLESPACE pg_default;

-- Portfolio templates associated with products
create table public.available_portfolios (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  name text null,
  available_products_id bigint null,       -- Foreign key to available_products
  constraint available_portfolios_pkey primary key (id),
  constraint available_portfolios_available_products_id_fkey foreign KEY (available_products_id) references available_products (id)
) TABLESPACE pg_default;

-- Investment funds available in the system
create table public.available_funds (
  id bigint generated by default as identity not null,
  fund_name text null,
  isin_number text null,                   -- International Securities Identification Number
  risk_factor smallint null,               -- Risk rating of the fund
  fund_cost numeric(6, 2) null,            -- Cost/fee of the fund
  status text null default 'active'::text,
  created_at timestamp with time zone not null default now(),
  constraint available_funds_pkey primary key (id),
  constraint available_funds_isin_number_key unique (isin_number)
) TABLESPACE pg_default;

-- =========================================================
-- 3. Third level tables with multiple dependencies
-- =========================================================

-- Association between products and funds
create table public.product_funds (
  id bigint generated by default as identity not null,
  available_products_id bigint not null,   -- Foreign key to available_products
  available_funds_id bigint not null,      -- Foreign key to available_funds
  created_at timestamp with time zone not null default now(),
  constraint product_funds_pkey primary key (id),
  constraint product_funds_uniq unique (available_products_id, available_funds_id),
  constraint product_funds_available_funds_id_fkey foreign KEY (available_funds_id) references available_funds (id),
  constraint product_funds_available_products_id_fkey foreign KEY (available_products_id) references available_products (id)
) TABLESPACE pg_default;

-- Funds within portfolios, with weighting and investment details
create table public.portfolio_funds (
  id bigint generated by default as identity not null,
  portfolio_id bigint not null,            -- Foreign key to portfolios
  available_funds_id bigint not null,      -- Foreign key to available_funds
  target_weighting numeric(5, 2) null,     -- Target allocation percentage
  start_date date not null,
  end_date date null,
  created_at timestamp with time zone not null default now(),
  amount_invested numeric(16, 2) null,     -- Amount invested in this fund
  constraint portfolio_funds_pkey primary key (id),
  constraint portfolio_funds_available_funds_id_fkey foreign KEY (available_funds_id) references available_funds (id),
  constraint portfolio_funds_portfolio_id_fkey foreign KEY (portfolio_id) references portfolios (id)
) TABLESPACE pg_default;

-- Client accounts associated with products
create table public.client_accounts (
  id bigint generated by default as identity not null,
  client_id bigint not null,               -- Foreign key to clients
  available_products_id bigint not null,   -- Foreign key to available_products
  account_name text null,
  status text not null default 'active'::text,
  start_date date not null,
  end_date date null,
  weighting numeric(5, 2) null,            -- Weighting in client's overall portfolio
  created_at timestamp with time zone not null default now(),
  constraint client_accounts_pkey primary key (id),
  constraint client_accounts_available_products_id_fkey foreign KEY (available_products_id) references available_products (id),
  constraint client_accounts_client_id_fkey foreign KEY (client_id) references clients (id)
) TABLESPACE pg_default;

-- Historical performance data for funds
create table public.fund_performance_history (
  id bigint generated by default as identity not null,
  fund_id bigint not null,                 -- Foreign key to available_funds
  price_date date not null,
  price numeric(16, 2) not null,           -- Fund price/value on given date
  created_at timestamp with time zone not null default now(),
  constraint fund_performance_history_pkey primary key (id),
  constraint fund_performance_history_fund_date_uniq unique (fund_id, price_date),
  constraint fund_performance_history_fund_id_fkey foreign KEY (fund_id) references available_funds (id)
) TABLESPACE pg_default;

-- Funds associated with portfolio templates
create table public.available_portfolio_funds (
  id bigint generated by default as identity not null,
  created_at timestamp with time zone not null default now(),
  portfolio_id bigint null,                -- Foreign key to available_portfolios
  fund_id bigint null,                     -- Foreign key to available_funds
  target_weighting numeric(5, 2) null,     -- Target allocation percentage
  constraint available_portfolio_funds_pkey primary key (id),
  constraint available_portfolio_funds_fund_id_fkey foreign KEY (fund_id) references available_funds (id),
  constraint available_portfolio_funds_portfolio_id_fkey foreign KEY (portfolio_id) references available_portfolios (id)
) TABLESPACE pg_default;

-- =========================================================
-- 4. Fourth level tables with complex dependencies
-- =========================================================

-- Valuations of funds in portfolios at specific dates
create table public.fund_valuations (
  id bigint generated by default as identity not null,
  portfolio_fund_id bigint not null,       -- Foreign key to portfolio_funds
  valuation_date timestamp without time zone not null,
  value numeric(16, 2) not null,           -- Valuation amount
  created_at timestamp with time zone not null default now(),
  constraint fund_valuations_pkey primary key (id),
  constraint fund_valuations_portfolio_fund_id_fkey foreign key (portfolio_fund_id) references portfolio_funds (id)
) TABLESPACE pg_default;

-- Holdings that link client accounts to portfolios
create table public.account_holdings (
  id bigint generated by default as identity not null,
  client_account_id bigint not null,       -- Foreign key to client_accounts
  portfolio_id bigint null,                -- Foreign key to portfolios
  status text not null default 'active'::text,
  start_date date not null,
  end_date date null,
  created_at timestamp with time zone not null default now(),
  constraint account_holdings_pkey primary key (id),
  constraint account_holdings_client_account_id_fkey foreign KEY (client_account_id) references client_accounts (id),
  constraint account_holdings_portfolio_id_fkey foreign KEY (portfolio_id) references portfolios (id)
) TABLESPACE pg_default;

-- =========================================================
-- 5. Fifth level tables with most complex dependencies
-- =========================================================

create table public.irr_values (
  id bigint generated by default as identity not null,
  value numeric(7, 2) null,
  created_at timestamp with time zone not null default now(),
  date timestamp without time zone null,
  fund_id bigint null,
  valuation numeric(16, 2) null,
  fund_valuation_id bigint null,
  constraint irr_values_pkey primary key (id),
  constraint irr_values_fund_id_fkey foreign KEY (fund_id) references portfolio_funds (id),
  constraint irr_values_fund_valuation_id_fkey foreign key (fund_valuation_id) references fund_valuations (id)
) TABLESPACE pg_default;

create table public.holding_activity_log (
  id bigint generated by default as identity not null,
  account_holding_id bigint not null,
  portfolio_fund_id bigint not null,
  activity_timestamp date not null,
  activity_type text not null,
  amount numeric(16, 2) null,
  created_at timestamp with time zone not null default now(),
  related_fund bigint null,
  constraint holding_activity_log_pkey primary key (id),
  constraint holding_activity_log_account_holding_id_fkey foreign KEY (account_holding_id) references account_holdings (id),
  constraint holding_activity_log_portfolio_fund_id_fkey foreign KEY (portfolio_fund_id) references portfolio_funds (id),
  constraint holding_activity_log_related_fund_fkey foreign KEY (related_fund) references portfolio_funds (id)
) TABLESPACE pg_default;

create index IF not exists idx_holding_activity_log_type_date on public.holding_activity_log using btree (activity_type, activity_timestamp) TABLESPACE pg_default;

-- Create unique constraint to prevent duplicate valuations for the same date
create unique index if not exists idx_fund_valuations_unique 
on public.fund_valuations (portfolio_fund_id, valuation_date) 
TABLESPACE pg_default;

-- Add indexes for efficient querying
create index if not exists idx_fund_valuations_date 
on public.fund_valuations using btree (valuation_date desc) 
TABLESPACE pg_default;

create index if not exists idx_fund_valuations_portfolio_fund_date 
on public.fund_valuations using btree (portfolio_fund_id, valuation_date desc) 
TABLESPACE pg_default;

-- Create index for efficient valuation lookup by date
CREATE INDEX IF NOT EXISTS idx_fund_valuations_fund_date 
ON public.fund_valuations (portfolio_fund_id, valuation_date);

-- Add index for efficient IRR value retrieval
create index IF not exists idx_irr_values_date on public.irr_values using btree (fund_id, date desc) TABLESPACE pg_default;

create index IF not exists idx_fund_performance_history_fund_date on public.fund_performance_history using btree (fund_id, price_date desc) TABLESPACE pg_default;

create index IF not exists idx_client_accounts_client_id on public.client_accounts using btree (client_id) TABLESPACE pg_default;

create index IF not exists idx_client_accounts_available_products_id on public.client_accounts using btree (available_products_id) TABLESPACE pg_default;

create index IF not exists idx_client_accounts_status on public.client_accounts using btree (status) TABLESPACE pg_default;

create index IF not exists idx_account_holdings_client_account on public.account_holdings using btree (client_account_id) TABLESPACE pg_default;

create index IF not exists idx_account_holdings_portfolio_id on public.account_holdings using btree (portfolio_id) TABLESPACE pg_default
where
  (portfolio_id is not null);

-- Create view for fund-provider relationships through portfolios
create view public.portfolio_fund_providers as
select 
    pf.portfolio_id,
    pf.available_funds_id as fund_id,
    ap.available_providers_id as provider_id
from portfolio_funds pf
join available_funds af on pf.available_funds_id = af.id
join product_funds prf on af.id = prf.available_funds_id
join available_products ap on prf.available_products_id = ap.id;

-- Create view for latest IRR values
create view public.latest_irr_values as
select distinct on (fund_id) 
    fund_id,
    value as irr_value,
    date as irr_date
from irr_values
order by fund_id, date desc;

-- Create view for latest fund valuations
create view public.latest_fund_valuations as
select distinct on (portfolio_fund_id) 
  id,
  portfolio_fund_id,
  valuation_date,
  value
from public.fund_valuations
order by portfolio_fund_id, valuation_date desc;

-- Add additional indexes for performance optimization
create index if not exists idx_portfolio_funds_available_funds on public.portfolio_funds using btree (available_funds_id) TABLESPACE pg_default;
create index if not exists idx_portfolio_funds_amount_invested on public.portfolio_funds using btree (amount_invested) TABLESPACE pg_default;
create index if not exists idx_irr_values_fund_date_value on public.irr_values using btree (fund_id, date desc, value) TABLESPACE pg_default;
create index if not exists idx_irr_values_fund_valuation_id on public.irr_values using btree (fund_valuation_id) TABLESPACE pg_default;
create index if not exists idx_client_accounts_start_date on public.client_accounts using btree (start_date) TABLESPACE pg_default;
create index if not exists idx_portfolios_start_date on public.portfolios using btree (start_date) TABLESPACE pg_default;
create index if not exists idx_available_portfolios_product_id on public.available_portfolios using btree (available_products_id) TABLESPACE pg_default
where
  (available_products_id is not null);

-- Additional indexes for performance optimization

-- Enable the pg_trgm extension for text search indexes (must be run by a superuser)
-- CREATE EXTENSION IF NOT EXISTS pg_trgm;

-- Portfolio Funds Status Index 
-- Speeds up queries filtering active/inactive portfolio funds
create index if not exists idx_portfolio_funds_status on public.portfolio_funds using btree (end_date) 
TABLESPACE pg_default;

-- Combined Portfolio Funds Date + Status Index
-- Optimizes filtered queries for active funds within date ranges
create index if not exists idx_portfolio_funds_dates_status on public.portfolio_funds 
using btree (start_date, end_date) 
TABLESPACE pg_default;

-- Fund Valuations Value Range Index
-- Optimizes range queries on valuation values
create index if not exists idx_fund_valuations_value on public.fund_valuations using btree (value) 
TABLESPACE pg_default;

-- Account Holdings Status + Dates Index
-- For queries filtering by active holdings in a date range
create index if not exists idx_account_holdings_status_dates on public.account_holdings 
using btree (status, start_date, end_date) 
TABLESPACE pg_default;

-- Activity Log Type + Date Index
-- Speeds up queries filtering by activity type and date range
create index if not exists idx_holding_activity_log_type_date on public.holding_activity_log 
using btree (activity_type, activity_timestamp) 
TABLESPACE pg_default;

-- Available Funds Status Index
-- Speeds up queries for active funds
create index if not exists idx_available_funds_status on public.available_funds using btree (status) 
TABLESPACE pg_default;

-- Covering Index for Common Fund Reporting
-- Speeds up common reports that use fund ID, name and status
create index if not exists idx_available_funds_reporting on public.available_funds 
using btree (id, fund_name, status) 
TABLESPACE pg_default;

-- Text Search Indexes (requires pg_trgm extension)
-- These indexes will only work if the pg_trgm extension is enabled

-- Client Name Index for Text Search
-- Optimizes client search by name with partial matches
-- create index if not exists idx_clients_name_trigram on public.clients using gin (name gin_trgm_ops);

-- Available Funds Name Text Search Index
-- Speeds up fund searches by name with partial matches
-- create index if not exists idx_available_funds_name_trigram on public.available_funds using gin (fund_name gin_trgm_ops);

-- Index for Available Portfolios by Product ID
-- Speeds up queries filtering portfolios by product
create index if not exists idx_available_portfolios_product_id 
on public.available_portfolios using btree (available_products_id) 
TABLESPACE pg_default
where (available_products_id is not null);
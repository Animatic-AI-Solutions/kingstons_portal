-- =========================================================
-- Kingston's Portal - PostgreSQL Schema Migration Script
-- This script creates the complete database schema for the local PostgreSQL instance
-- Based on database.sql with PostgreSQL-specific optimizations
-- =========================================================

-- Set client encoding and timezone
SET client_encoding = 'UTF8';
SET timezone = 'UTC';

-- =========================================================
-- Drop Existing Objects (Clean Slate)
-- =========================================================
-- Drop Views first to remove dependencies
DROP VIEW IF EXISTS public.provider_distribution_fast CASCADE;
DROP VIEW IF EXISTS public.fund_distribution_fast CASCADE;
DROP VIEW IF EXISTS public.analytics_dashboard_summary CASCADE;
DROP VIEW IF EXISTS public.company_irr_cache CASCADE;
DROP VIEW IF EXISTS public.client_groups_summary CASCADE;
DROP VIEW IF EXISTS public.revenue_analytics_optimized CASCADE;
DROP VIEW IF EXISTS public.products_display_view CASCADE;
DROP VIEW IF EXISTS public.provider_revenue_breakdown CASCADE;
DROP VIEW IF EXISTS public.company_revenue_analytics CASCADE;
DROP VIEW IF EXISTS public.products_list_view CASCADE;
DROP VIEW IF EXISTS public.template_generation_weighted_risk CASCADE;
DROP VIEW IF EXISTS public.client_group_complete_data CASCADE;
DROP VIEW IF EXISTS public.complete_fund_data CASCADE;
DROP VIEW IF EXISTS public.fund_activity_summary CASCADE;
DROP VIEW IF EXISTS public.portfolio_performance_history CASCADE;
DROP VIEW IF EXISTS public.latest_portfolio_valuations CASCADE;
DROP VIEW IF EXISTS public.advisor_client_summary CASCADE;
DROP VIEW IF EXISTS public.product_owner_details CASCADE;
DROP VIEW IF EXISTS public.fund_historical_irr CASCADE;
DROP VIEW IF EXISTS public.portfolio_historical_irr CASCADE;
DROP VIEW IF EXISTS public.latest_portfolio_irr_values CASCADE;
DROP VIEW IF EXISTS public.latest_portfolio_fund_valuations CASCADE;
DROP VIEW IF EXISTS public.latest_portfolio_fund_irr_values CASCADE;

-- Drop Functions
DROP FUNCTION IF EXISTS public.calculate_adhoc_portfolio_valuation(BIGINT) CASCADE;
DROP FUNCTION IF EXISTS public.global_search_entities(text) CASCADE;

-- Drop Tables (Order matters for FKs)
DROP TABLE IF EXISTS public.provider_switch_log CASCADE;
DROP TABLE IF EXISTS public.portfolio_fund_irr_values CASCADE;
DROP TABLE IF EXISTS public.portfolio_irr_values CASCADE;
DROP TABLE IF EXISTS public.holding_activity_log CASCADE;
DROP TABLE IF EXISTS public.portfolio_fund_valuations CASCADE;
DROP TABLE IF EXISTS public.portfolio_valuations CASCADE;
DROP TABLE IF EXISTS public.product_owner_products CASCADE;
DROP TABLE IF EXISTS public.portfolio_funds CASCADE;
DROP TABLE IF EXISTS public.available_portfolio_funds CASCADE;
DROP TABLE IF EXISTS public.client_products CASCADE;
DROP TABLE IF EXISTS public.portfolios CASCADE;
DROP TABLE IF EXISTS public.template_portfolio_generations CASCADE;
DROP TABLE IF EXISTS public.available_portfolios CASCADE;
DROP TABLE IF EXISTS public.available_funds CASCADE;
DROP TABLE IF EXISTS public.client_group_product_owners CASCADE;
DROP TABLE IF EXISTS public.product_owners CASCADE;
DROP TABLE IF EXISTS public.available_providers CASCADE;
DROP TABLE IF EXISTS public.client_groups CASCADE;
DROP TABLE IF EXISTS public.session CASCADE;
DROP TABLE IF EXISTS public.authentication CASCADE;
DROP TABLE IF EXISTS public.profiles CASCADE;

-- =========================================================
-- Level 1 Tables (No FK dependencies)
-- =========================================================

CREATE TABLE public.profiles (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    first_name text NULL,
    last_name text NULL,
    email text NULL,
    profile_picture_url text NULL DEFAULT '/images/Companylogo2.png'::text,
    preferred_client_view text NULL DEFAULT 'list'::text,
    preferred_landing_page text NULL DEFAULT '/'::text,
    CONSTRAINT profiles_pkey PRIMARY KEY (id)
);

CREATE TABLE public.authentication (
    auth_id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    password_hash text NULL,
    profiles_id bigint NULL,
    CONSTRAINT authentication_pkey PRIMARY KEY (auth_id)
);

CREATE TABLE public.session (
    session_id text NOT NULL,
    profiles_id bigint NULL,
    expires_at timestamp WITH time zone NULL,
    CONSTRAINT session_pkey PRIMARY KEY (session_id)
);

CREATE TABLE public.available_providers (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name text NULL,
    status text NOT NULL DEFAULT 'active'::text,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    theme_color text NULL,
    CONSTRAINT available_providers_pkey PRIMARY KEY (id)
);

CREATE TABLE public.client_groups (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    advisor text NULL,
    status text NULL DEFAULT 'active'::text,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    name text NULL,
    type text NULL DEFAULT 'Family'::text,
    CONSTRAINT client_groups_pkey PRIMARY KEY (id)
);

CREATE TABLE public.product_owners (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    status text NULL DEFAULT 'active'::text,
    firstname text NULL DEFAULT ''::text,
    surname text NULL,
    known_as text NULL,
    CONSTRAINT product_owners_pkey PRIMARY KEY (id)
);

CREATE TABLE public.available_funds (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    fund_name varchar(60) NULL,
    isin_number text NULL,
    risk_factor smallint NULL,
    fund_cost numeric(6, 2) NULL,
    status text NULL DEFAULT 'active'::text,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT available_funds_pkey PRIMARY KEY (id),
    CONSTRAINT available_funds_isin_number_key UNIQUE (isin_number)
);

CREATE TABLE public.available_portfolios (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    name text NULL,
    CONSTRAINT available_portfolios_pkey PRIMARY KEY (id)
);

-- =========================================================
-- Level 2 Tables (FK to Level 1)
-- =========================================================

CREATE TABLE public.client_group_product_owners (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    client_group_id bigint NULL,
    product_owner_id bigint NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT client_group_product_owners_pkey PRIMARY KEY (id)
);

CREATE TABLE public.template_portfolio_generations (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    available_portfolio_id bigint NULL,
    version_number integer NULL,
    generation_name text NULL,
    description text NULL,
    status text NULL DEFAULT 'active'::text,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT template_portfolio_generations_pkey PRIMARY KEY (id)
);

CREATE TABLE public.available_portfolio_funds (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    template_portfolio_generation_id bigint NULL,
    fund_id bigint NULL,
    target_weighting numeric(5, 2) NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT available_portfolio_funds_pkey PRIMARY KEY (id)
);

CREATE TABLE public.portfolios (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    portfolio_name text NULL,
    status text NULL DEFAULT 'active'::text,
    start_date date NULL,
    end_date date NULL,
    template_generation_id bigint NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolios_pkey PRIMARY KEY (id)
);

-- =========================================================
-- Level 3 Tables (FK to Level 2)
-- =========================================================

CREATE TABLE public.client_products (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    client_id bigint NULL,
    product_name text NULL,
    product_type text NULL,
    status text NULL DEFAULT 'active'::text,
    start_date date NULL,
    end_date date NULL,
    provider_id bigint NULL,
    portfolio_id bigint NULL,
    plan_number text NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT client_products_pkey PRIMARY KEY (id)
);

CREATE TABLE public.product_owner_products (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_owner_id bigint NULL,
    product_id bigint NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT product_owner_products_pkey PRIMARY KEY (id)
);

CREATE TABLE public.portfolio_funds (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    portfolio_id bigint NULL,
    available_funds_id bigint NULL,
    target_weighting numeric(5, 2) NULL,
    amount_invested numeric(12, 2) NULL,
    start_date date NULL,
    end_date date NULL,
    status text NULL DEFAULT 'active'::text,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolio_funds_pkey PRIMARY KEY (id)
);

-- =========================================================
-- Level 4 Tables (Transaction/Valuation Data)
-- =========================================================

CREATE TABLE public.portfolio_fund_valuations (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    portfolio_fund_id bigint NULL,
    valuation_date date NULL,
    valuation numeric(12, 2) NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolio_fund_valuations_pkey PRIMARY KEY (id)
);

CREATE TABLE public.portfolio_valuations (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    portfolio_id bigint NULL,
    valuation_date date NULL,
    valuation numeric(12, 2) NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolio_valuations_pkey PRIMARY KEY (id)
);

CREATE TABLE public.portfolio_fund_irr_values (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    fund_id bigint NULL,
    date date NULL,
    irr_result numeric(8, 4) NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolio_fund_irr_values_pkey PRIMARY KEY (id)
);

CREATE TABLE public.portfolio_irr_values (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    portfolio_id bigint NULL,
    date date NULL,
    irr_result numeric(8, 4) NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT portfolio_irr_values_pkey PRIMARY KEY (id)
);

CREATE TABLE public.holding_activity_log (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    product_id bigint NULL,
    portfolio_fund_id bigint NULL,
    activity_type text NULL,
    amount numeric(12, 2) NULL,
    activity_timestamp timestamp WITH time zone NOT NULL DEFAULT now(),
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT holding_activity_log_pkey PRIMARY KEY (id)
);

CREATE TABLE public.provider_switch_log (
    id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    client_product_id bigint NULL,
    previous_provider_id bigint NULL,
    new_provider_id bigint NULL,
    switch_date timestamp WITH time zone NULL,
    created_at timestamp WITH time zone NOT NULL DEFAULT now(),
    CONSTRAINT provider_switch_log_pkey PRIMARY KEY (id)
);

-- =========================================================
-- Add Foreign Key Constraints
-- =========================================================

-- Authentication and Session FKs
ALTER TABLE public.authentication ADD CONSTRAINT authentication_profiles_id_fkey 
    FOREIGN KEY (profiles_id) REFERENCES public.profiles(id) ON DELETE CASCADE;

ALTER TABLE public.session ADD CONSTRAINT session_profiles_id_fkey 
    FOREIGN KEY (profiles_id) REFERENCES public.profiles(id) ON DELETE CASCADE;

-- Client and Product Owner relationships
ALTER TABLE public.client_group_product_owners ADD CONSTRAINT client_group_product_owners_client_group_id_fkey 
    FOREIGN KEY (client_group_id) REFERENCES public.client_groups(id) ON DELETE CASCADE;

ALTER TABLE public.client_group_product_owners ADD CONSTRAINT client_group_product_owners_product_owner_id_fkey 
    FOREIGN KEY (product_owner_id) REFERENCES public.product_owners(id) ON DELETE CASCADE;

-- Portfolio template relationships
ALTER TABLE public.template_portfolio_generations ADD CONSTRAINT template_portfolio_generations_available_portfolio_id_fkey 
    FOREIGN KEY (available_portfolio_id) REFERENCES public.available_portfolios(id) ON DELETE CASCADE;

ALTER TABLE public.available_portfolio_funds ADD CONSTRAINT available_portfolio_funds_template_portfolio_generation_id_fkey 
    FOREIGN KEY (template_portfolio_generation_id) REFERENCES public.template_portfolio_generations(id) ON DELETE CASCADE;

ALTER TABLE public.available_portfolio_funds ADD CONSTRAINT available_portfolio_funds_fund_id_fkey 
    FOREIGN KEY (fund_id) REFERENCES public.available_funds(id) ON DELETE CASCADE;

-- Portfolio relationships
ALTER TABLE public.portfolios ADD CONSTRAINT portfolios_template_generation_id_fkey 
    FOREIGN KEY (template_generation_id) REFERENCES public.template_portfolio_generations(id);

-- Client product relationships
ALTER TABLE public.client_products ADD CONSTRAINT client_products_client_id_fkey 
    FOREIGN KEY (client_id) REFERENCES public.client_groups(id) ON DELETE CASCADE;

ALTER TABLE public.client_products ADD CONSTRAINT client_products_provider_id_fkey 
    FOREIGN KEY (provider_id) REFERENCES public.available_providers(id);

ALTER TABLE public.client_products ADD CONSTRAINT client_products_portfolio_id_fkey 
    FOREIGN KEY (portfolio_id) REFERENCES public.portfolios(id);

-- Product ownership relationships
ALTER TABLE public.product_owner_products ADD CONSTRAINT product_owner_products_product_owner_id_fkey 
    FOREIGN KEY (product_owner_id) REFERENCES public.product_owners(id) ON DELETE CASCADE;

ALTER TABLE public.product_owner_products ADD CONSTRAINT product_owner_products_product_id_fkey 
    FOREIGN KEY (product_id) REFERENCES public.client_products(id) ON DELETE CASCADE;

-- Portfolio fund relationships
ALTER TABLE public.portfolio_funds ADD CONSTRAINT portfolio_funds_portfolio_id_fkey 
    FOREIGN KEY (portfolio_id) REFERENCES public.portfolios(id) ON DELETE CASCADE;

ALTER TABLE public.portfolio_funds ADD CONSTRAINT portfolio_funds_available_funds_id_fkey 
    FOREIGN KEY (available_funds_id) REFERENCES public.available_funds(id);

-- Valuation relationships
ALTER TABLE public.portfolio_fund_valuations ADD CONSTRAINT portfolio_fund_valuations_portfolio_fund_id_fkey 
    FOREIGN KEY (portfolio_fund_id) REFERENCES public.portfolio_funds(id) ON DELETE CASCADE;

ALTER TABLE public.portfolio_valuations ADD CONSTRAINT portfolio_valuations_portfolio_id_fkey 
    FOREIGN KEY (portfolio_id) REFERENCES public.portfolios(id) ON DELETE CASCADE;

-- IRR relationships
ALTER TABLE public.portfolio_fund_irr_values ADD CONSTRAINT portfolio_fund_irr_values_fund_id_fkey 
    FOREIGN KEY (fund_id) REFERENCES public.portfolio_funds(id) ON DELETE CASCADE;

ALTER TABLE public.portfolio_irr_values ADD CONSTRAINT portfolio_irr_values_portfolio_id_fkey 
    FOREIGN KEY (portfolio_id) REFERENCES public.portfolios(id) ON DELETE CASCADE;

-- Activity log relationships
ALTER TABLE public.holding_activity_log ADD CONSTRAINT holding_activity_log_product_id_fkey 
    FOREIGN KEY (product_id) REFERENCES public.client_products(id) ON DELETE CASCADE;

ALTER TABLE public.holding_activity_log ADD CONSTRAINT holding_activity_log_portfolio_fund_id_fkey 
    FOREIGN KEY (portfolio_fund_id) REFERENCES public.portfolio_funds(id) ON DELETE CASCADE;

-- Provider switch log relationships
ALTER TABLE public.provider_switch_log ADD CONSTRAINT provider_switch_log_client_product_id_fkey 
    FOREIGN KEY (client_product_id) REFERENCES public.client_products(id) ON DELETE CASCADE;

ALTER TABLE public.provider_switch_log ADD CONSTRAINT provider_switch_log_previous_provider_id_fkey 
    FOREIGN KEY (previous_provider_id) REFERENCES public.available_providers(id);

ALTER TABLE public.provider_switch_log ADD CONSTRAINT provider_switch_log_new_provider_id_fkey 
    FOREIGN KEY (new_provider_id) REFERENCES public.available_providers(id);

-- =========================================================
-- Create Indexes for Performance
-- =========================================================

-- Authentication indexes
CREATE INDEX idx_authentication_profiles_id ON public.authentication(profiles_id);
CREATE INDEX idx_session_profiles_id ON public.session(profiles_id);
CREATE INDEX idx_session_expires_at ON public.session(expires_at);

-- Client and product indexes
CREATE INDEX idx_client_groups_status ON public.client_groups(status);
CREATE INDEX idx_client_groups_advisor ON public.client_groups(advisor);
CREATE INDEX idx_client_products_client_id ON public.client_products(client_id);
CREATE INDEX idx_client_products_status ON public.client_products(status);
CREATE INDEX idx_client_products_provider_id ON public.client_products(provider_id);
CREATE INDEX idx_client_products_portfolio_id ON public.client_products(portfolio_id);

-- Portfolio indexes
CREATE INDEX idx_portfolios_status ON public.portfolios(status);
CREATE INDEX idx_portfolios_template_generation_id ON public.portfolios(template_generation_id);
CREATE INDEX idx_portfolio_funds_portfolio_id ON public.portfolio_funds(portfolio_id);
CREATE INDEX idx_portfolio_funds_status ON public.portfolio_funds(status);

-- Valuation indexes
CREATE INDEX idx_portfolio_valuations_portfolio_id ON public.portfolio_valuations(portfolio_id);
CREATE INDEX idx_portfolio_valuations_date ON public.portfolio_valuations(valuation_date);
CREATE INDEX idx_portfolio_fund_valuations_fund_id ON public.portfolio_fund_valuations(portfolio_fund_id);
CREATE INDEX idx_portfolio_fund_valuations_date ON public.portfolio_fund_valuations(valuation_date);

-- IRR indexes
CREATE INDEX idx_portfolio_irr_values_portfolio_id ON public.portfolio_irr_values(portfolio_id);
CREATE INDEX idx_portfolio_irr_values_date ON public.portfolio_irr_values(date);
CREATE INDEX idx_portfolio_fund_irr_values_fund_id ON public.portfolio_fund_irr_values(fund_id);
CREATE INDEX idx_portfolio_fund_irr_values_date ON public.portfolio_fund_irr_values(date);

-- Activity log indexes
CREATE INDEX idx_holding_activity_log_product_id ON public.holding_activity_log(product_id);
CREATE INDEX idx_holding_activity_log_portfolio_fund_id ON public.holding_activity_log(portfolio_fund_id);
CREATE INDEX idx_holding_activity_log_timestamp ON public.holding_activity_log(activity_timestamp);

-- Fund indexes
CREATE INDEX idx_available_funds_status ON public.available_funds(status);
CREATE INDEX idx_available_funds_isin ON public.available_funds(isin_number);

-- Provider indexes
CREATE INDEX idx_available_providers_status ON public.available_providers(status);

COMMIT;

-- =========================================================
-- Success Message
-- =========================================================
\echo 'Schema creation completed successfully!'
\echo 'Next step: Run the views creation script'
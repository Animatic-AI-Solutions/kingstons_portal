MultiSelectDropdown.tsx:171 ✅ MultiSelect: Adding item 13 to selection. New values: [13]
ReportGenerator.tsx:774 🕐 PHASE 2.1: Using debounced updateRelatedProducts (300ms delay)
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 0 products
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: []
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 0 products
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: []
ReportGenerator.tsx:3076 🚫 PHASE 1.2 FIX: Skipping IRR dates fetch - no included products
ReportGenerator.tsx:703 Fetching 1 client groups in parallel...
ReportGenerator.tsx:714 Fetched client group 13: 3 products
ReportGenerator.tsx:744 Parallel fetch complete: 1 client groups processed
ReportGenerator.tsx:754 Total products displayed: 3
ReportGenerator.tsx:755 Client group cache size: 0 groups
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:774 🕐 PHASE 2.1: Using debounced updateRelatedProducts (300ms delay)
ReportGenerator.tsx:3082 📊 Fetching available IRR dates for 3 products
historicalIRRService.ts:143 📊 Attempting to fetch combined historical IRR from: /api/historical-irr/combined/28?limit=1000
historicalIRRService.ts:154 📊 Response status: 200, Content-Type: application/json
historicalIRRService.ts:181 ✅ Combined historical IRR fetched successfully for product 28: {product_id: 28, portfolio_historical_irr: Array(2), funds_historical_irr: Array(10), portfolio_count: 2, funds_count: 10, …}
historicalIRRService.ts:143 📊 Attempting to fetch combined historical IRR from: /api/historical-irr/combined/29?limit=1000
historicalIRRService.ts:154 📊 Response status: 200, Content-Type: application/json
historicalIRRService.ts:181 ✅ Combined historical IRR fetched successfully for product 29: {product_id: 29, portfolio_historical_irr: Array(2), funds_historical_irr: Array(10), portfolio_count: 2, funds_count: 10, …}
historicalIRRService.ts:143 📊 Attempting to fetch combined historical IRR from: /api/historical-irr/combined/30?limit=1000
historicalIRRService.ts:154 📊 Response status: 200, Content-Type: application/json
historicalIRRService.ts:181 ✅ Combined historical IRR fetched successfully for product 30: {product_id: 30, portfolio_historical_irr: Array(4), funds_historical_irr: Array(4), portfolio_count: 4, funds_count: 4, …}
ReportGenerator.tsx:2958 Global Top 8 Most Recent Dates: []
ReportGenerator.tsx:2978 Product 28: Selected 0 out of 8 global dates: []
ReportGenerator.tsx:2978 Product 29: Selected 0 out of 8 global dates: []
ReportGenerator.tsx:2978 Product 30: Selected 0 out of 8 global dates: []
ReportGenerator.tsx:2981 Select All Results Summary:
ReportGenerator.tsx:2982 Global unique dates selected: 0
ReportGenerator.tsx:2985 Product 28: 0/0 global dates selected
ReportGenerator.tsx:2985 Product 29: 0/0 global dates selected
ReportGenerator.tsx:2985 Product 30: 0/0 global dates selected
 Using cached data for client group 13: 3 products
 Total products displayed: 3
 Client group cache size: 1 groups
 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:3082 📊 Fetching available IRR dates for 3 products
ReportGenerator.tsx:2958 Global Top 8 Most Recent Dates: (5) ['2025-07-01', '2024-12-01', '2023-06-01', '2023-04-01', '2022-02-01']
ReportGenerator.tsx:2978 Product 28: Selected 2 out of 8 global dates: (2) ['2025-07-01', '2023-04-01']
ReportGenerator.tsx:2978 Product 29: Selected 2 out of 8 global dates: (2) ['2023-06-01', '2023-04-01']
ReportGenerator.tsx:2978 Product 30: Selected 4 out of 8 global dates: (4) ['2025-07-01', '2024-12-01', '2023-04-01', '2022-02-01']
ReportGenerator.tsx:2981 Select All Results Summary:
ReportGenerator.tsx:2982 Global unique dates selected: 5
ReportGenerator.tsx:2985 Product 28: 2/5 global dates selected
ReportGenerator.tsx:2985 Product 29: 2/5 global dates selected
ReportGenerator.tsx:2985 Product 30: 4/5 global dates selected
ReportGenerator.tsx:1312 Report generation validation:
ReportGenerator.tsx:1313 Selected client groups: 1
ReportGenerator.tsx:1314 Selected products: 0
ReportGenerator.tsx:1353 Using fallback valuation date: 2023-04-01 (from IRR dates)
ReportGenerator.tsx:1357 Final valuation date for report: 2023-04-01
 IRR dates selected: Yes (2 dates)
 Available valuation dates: 0
 Unique Product IDs for report: (3) [28, 29, 30]
 Fetching historical IRR data for products: (3) [28, 29, 30]
 Global selected months: ['2023-04']
 Total historical IRR map entries: 24
 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:3110 📅 End valuation date changed, filtering IRR dates: 2023-04-01
ReportGenerator.tsx:1450 Historical IRR data fetched: 24 funds with historical data
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:1478 Product Stocks & Shares ISA has 10 portfolio funds: (10) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1514 Fetching activity logs for 10 portfolio funds: (10) [155, 156, 157, 158, 159, 160, 161, 162, 163, 164]
ReportGenerator.tsx:1521 Retrieved 30 total activity logs for product Stocks & Shares ISA
ReportGenerator.tsx:1522 Sample activities: (3) [{…}, {…}, {…}]
valuationDataService.ts:145 🚀 Batch fetching ALL historical valuations for 10 funds (eliminates 10 individual requests)
valuationDataService.ts:164 ✅ Batch historical valuation fetch complete: 20 total valuations for 10 funds
ReportGenerator.tsx:1669 Processing 30 activity logs for product Stocks & Shares ISA
ReportGenerator.tsx:1716 Product Stocks & Shares ISA activity totals: {totalInvestment: 20000, totalWithdrawal: 25000, totalSwitchIn: 24276.3, totalSwitchOut: 14288.720000000001, productStartDate: '2022-08-01', …}
ReportGenerator.tsx:1852 Fund Cash (ID: 155) has 3 activity logs
ReportGenerator.tsx:1868 Activities for Cash: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'ProductSwitchIn', raw_amount: 9987.58, parsed_amount: 9987.58, amount_check: false, amount_absolute: 9987.58, …}
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'FundSwitchOut', raw_amount: 9774.78, parsed_amount: 9774.78, amount_check: false, amount_absolute: 9774.78, …}
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'Investment', raw_amount: 200.02, parsed_amount: 200.02, amount_check: false, amount_absolute: 200.02, …}
ReportGenerator.tsx:1926 Fund Cash activity totals: {fundInvestment: 200.02, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 9987.58, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund BNY Mellon Global Income (ID: 156) has 3 activity logs
ReportGenerator.tsx:1868 Activities for BNY Mellon Global Income: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Global Income: {activity_type: 'Withdrawal', raw_amount: 1165.42, parsed_amount: 1165.42, amount_check: false, amount_absolute: 1165.42, …}
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Global Income: {activity_type: 'FundSwitchIn', raw_amount: 463.02, parsed_amount: 463.02, amount_check: false, amount_absolute: 463.02, …}
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Global Income: {activity_type: 'Investment', raw_amount: 1000, parsed_amount: 1000, amount_check: false, amount_absolute: 1000, …}
ReportGenerator.tsx:1926 Fund BNY Mellon Global Income activity totals: {fundInvestment: 1000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund BNY Mellon Multi-Asset Balanced (ID: 157) has 3 activity logs
ReportGenerator.tsx:1868 Activities for BNY Mellon Multi-Asset Balanced: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Multi-Asset Balanced: {activity_type: 'FundSwitchIn', raw_amount: 406.23, parsed_amount: 406.23, amount_check: false, amount_absolute: 406.23, …}
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Multi-Asset Balanced: {activity_type: 'Withdrawal', raw_amount: 2514.44, parsed_amount: 2514.44, amount_check: false, amount_absolute: 2514.44, …}
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Multi-Asset Balanced: {activity_type: 'FundSwitchIn', raw_amount: 2988.07, parsed_amount: 2988.07, amount_check: false, amount_absolute: 2988.07, …}
ReportGenerator.tsx:1926 Fund BNY Mellon Multi-Asset Balanced activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Fidelity UK Smaller Companies (ID: 158) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Fidelity UK Smaller Companies: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Fidelity UK Smaller Companies: {activity_type: 'Withdrawal', raw_amount: 1288.33, parsed_amount: 1288.33, amount_check: false, amount_absolute: 1288.33, …}
ReportGenerator.tsx:1877 Processing activity for Fidelity UK Smaller Companies: {activity_type: 'FundSwitchIn', raw_amount: 1494.05, parsed_amount: 1494.05, amount_check: false, amount_absolute: 1494.05, …}
ReportGenerator.tsx:1926 Fund Fidelity UK Smaller Companies activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund FTF Martin Currie UK Rising Dividends (ID: 159) has 3 activity logs
ReportGenerator.tsx:1868 Activities for FTF Martin Currie UK Rising Dividends: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for FTF Martin Currie UK Rising Dividends: {activity_type: 'Withdrawal', raw_amount: 3626.22, parsed_amount: 3626.22, amount_check: false, amount_absolute: 3626.22, …}
ReportGenerator.tsx:1877 Processing activity for FTF Martin Currie UK Rising Dividends: {activity_type: 'FundSwitchIn', raw_amount: 1776.05, parsed_amount: 1776.05, amount_check: false, amount_absolute: 1776.05, …}
ReportGenerator.tsx:1877 Processing activity for FTF Martin Currie UK Rising Dividends: {activity_type: 'Investment', raw_amount: 2600, parsed_amount: 2600, amount_check: false, amount_absolute: 2600, …}
ReportGenerator.tsx:1926 Fund FTF Martin Currie UK Rising Dividends activity totals: {fundInvestment: 2600, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund RL Sustainable World Trust (ID: 160) has 3 activity logs
ReportGenerator.tsx:1868 Activities for RL Sustainable World Trust: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for RL Sustainable World Trust: {activity_type: 'Withdrawal', raw_amount: 5190.46, parsed_amount: 5190.46, amount_check: false, amount_absolute: 5190.46, …}
ReportGenerator.tsx:1877 Processing activity for RL Sustainable World Trust: {activity_type: 'FundSwitchIn', raw_amount: 1912.42, parsed_amount: 1912.42, amount_check: false, amount_absolute: 1912.42, …}
ReportGenerator.tsx:1877 Processing activity for RL Sustainable World Trust: {activity_type: 'Investment', raw_amount: 4000, parsed_amount: 4000, amount_check: false, amount_absolute: 4000, …}
ReportGenerator.tsx:1926 Fund RL Sustainable World Trust activity totals: {fundInvestment: 4000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Stewart Investors Worldwide Leaders  (ID: 161) has 3 activity logs
ReportGenerator.tsx:1868 Activities for Stewart Investors Worldwide Leaders : (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Stewart Investors Worldwide Leaders : {activity_type: 'Withdrawal', raw_amount: 5256.67, parsed_amount: 5256.67, amount_check: false, amount_absolute: 5256.67, …}
ReportGenerator.tsx:1877 Processing activity for Stewart Investors Worldwide Leaders : {activity_type: 'FundSwitchIn', raw_amount: 1839.81, parsed_amount: 1839.81, amount_check: false, amount_absolute: 1839.81, …}
ReportGenerator.tsx:1877 Processing activity for Stewart Investors Worldwide Leaders : {activity_type: 'Investment', raw_amount: 4000, parsed_amount: 4000, amount_check: false, amount_absolute: 4000, …}
ReportGenerator.tsx:1926 Fund Stewart Investors Worldwide Leaders  activity totals: {fundInvestment: 4000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Vgd LifeStrategy 40% Equity (ID: 162) has 3 activity logs
ReportGenerator.tsx:1868 Activities for Vgd LifeStrategy 40% Equity: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Vgd LifeStrategy 40% Equity: {activity_type: 'Withdrawal', raw_amount: 3409.27, parsed_amount: 3409.27, amount_check: false, amount_absolute: 3409.27, …}
ReportGenerator.tsx:1877 Processing activity for Vgd LifeStrategy 40% Equity: {activity_type: 'FundSwitchIn', raw_amount: 1452.05, parsed_amount: 1452.05, amount_check: false, amount_absolute: 1452.05, …}
ReportGenerator.tsx:1877 Processing activity for Vgd LifeStrategy 40% Equity: {activity_type: 'Investment', raw_amount: 2800, parsed_amount: 2800, amount_check: false, amount_absolute: 2800, …}
ReportGenerator.tsx:1926 Fund Vgd LifeStrategy 40% Equity activity totals: {fundInvestment: 2800, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Vgd LifeStrategy 80% Equity (ID: 163) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Vgd LifeStrategy 80% Equity: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Vgd LifeStrategy 80% Equity: {activity_type: 'Withdrawal', raw_amount: 1288.3, parsed_amount: 1288.3, amount_check: false, amount_absolute: 1288.3, …}
ReportGenerator.tsx:1877 Processing activity for Vgd LifeStrategy 80% Equity: {activity_type: 'FundSwitchIn', raw_amount: 1494.03, parsed_amount: 1494.03, amount_check: false, amount_absolute: 1494.03, …}
ReportGenerator.tsx:1926 Fund Vgd LifeStrategy 80% Equity activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Historical Funds (ID: 164) has 5 activity logs
ReportGenerator.tsx:1868 Activities for Historical Funds: (5) [{…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'FundSwitchOut', raw_amount: 406.23, parsed_amount: 406.23, amount_check: false, amount_absolute: 406.23, …}
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'Withdrawal', raw_amount: 1260.89, parsed_amount: 1260.89, amount_check: false, amount_absolute: 1260.89, …}
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'FundSwitchIn', raw_amount: 462.99, parsed_amount: 462.99, amount_check: false, amount_absolute: 462.99, …}
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'FundSwitchOut', raw_amount: 4107.71, parsed_amount: 4107.71, amount_check: false, amount_absolute: 4107.71, …}
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'Investment', raw_amount: 5399.98, parsed_amount: 5399.98, amount_check: false, amount_absolute: 5399.98, …}
ReportGenerator.tsx:1926 Fund Historical Funds activity totals: {fundInvestment: 5399.98, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:2004 Calculating standardized IRR for product 28 with fund IDs: (10) [155, 156, 157, 158, 159, 160, 161, 162, 163, 164]
irrDataService.ts:131 🚀 [IRR DEBUG] Starting getOptimizedIRRData with params: {portfolioId: 207, portfolioFundIds: Array(10), endDate: undefined, includeHistorical: false}
irrDataService.ts:141 📋 [IRR DEBUG] Strategy 1: Checking for stored portfolio IRR
irrDataService.ts:143 📋 [IRR DEBUG] Portfolio ID provided: 207, fetching stored IRR...
irrDataService.ts:44 🔍 [IRR DEBUG] Fetching stored portfolio IRR for portfolio 207
irrDataService.ts:45 🔍 [IRR DEBUG] API endpoint: /api/portfolios/207/latest-irr
irrDataService.ts:49 🔍 [IRR DEBUG] Portfolio IRR API response: {status: 200, data: {…}, hasData: true, irrResult: 6.8, irrResultType: 'number', …}
irrDataService.ts:60 🔍 [IRR DEBUG] Extracted IRR result: 6.8 (type: number)
irrDataService.ts:145 📋 [IRR DEBUG] Stored portfolio IRR result: 6.8
irrDataService.ts:148 ✅ [IRR DEBUG] Using stored portfolio IRR: 6.8% for portfolio 207
irrDataService.ts:160 Retrieved undefined stored fund IRRs
irrDataService.ts:169 📋 [IRR DEBUG] Strategy 3: Checking if IRR calculation is needed
irrDataService.ts:170 📋 [IRR DEBUG] Calculation decision factors: {noStoredIRR: false, includeHistorical: false, hasEndDate: false, needsCalculation: undefined, portfolioFundIdsLength: 10}
irrDataService.ts:203 ⏭️ [IRR DEBUG] Skipping IRR calculation - needsCalculation: undefined, fundIds length: 10
irrDataService.ts:213 🎯 [IRR DEBUG] Final getOptimizedIRRData result: {portfolioIRR: 6.8, fundIRRs: {…}, historicalIRR: null, irrDate: 'latest'}
ReportGenerator.tsx:2058 Optimized IRR for active product 28: 6.8% (source: latest)
ReportGenerator.tsx:2322 - Total fund summaries: 10
ReportGenerator.tsx:2323 - Active funds: 10
ReportGenerator.tsx:2324 - Inactive funds: 0
ReportGenerator.tsx:2325 - All fund statuses: (10) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1478 Product GIA has 10 portfolio funds: (10) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1514 Fetching activity logs for 10 portfolio funds: (10) [165, 166, 167, 168, 169, 170, 171, 172, 173, 174]
ReportGenerator.tsx:1521 Retrieved 14 total activity logs for product GIA
ReportGenerator.tsx:1522 Sample activities: (3) [{…}, {…}, {…}]
valuationDataService.ts:145 🚀 Batch fetching ALL historical valuations for 10 funds (eliminates 10 individual requests)
valuationDataService.ts:164 ✅ Batch historical valuation fetch complete: 20 total valuations for 10 funds
ReportGenerator.tsx:1669 Processing 14 activity logs for product GIA
ReportGenerator.tsx:1716 Product GIA activity totals: {totalInvestment: 10000, totalWithdrawal: 0, totalSwitchIn: 0, totalSwitchOut: 9987.58, productStartDate: '2022-08-01', …}
ReportGenerator.tsx:1751 Allowing inactive product GIA to proceed with valuation: 0
ReportGenerator.tsx:1852 Fund Cash (ID: 165) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Cash: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'ProductSwitchOut', raw_amount: 48.58, parsed_amount: 48.58, amount_check: false, amount_absolute: 48.58, …}
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'Investment', raw_amount: 99.91, parsed_amount: 99.91, amount_check: false, amount_absolute: 99.91, …}
ReportGenerator.tsx:1926 Fund Cash activity totals: {fundInvestment: 99.91, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 48.58, …}
ReportGenerator.tsx:1852 Fund BNY Mellon Global Income (ID: 166) has 2 activity logs
ReportGenerator.tsx:1868 Activities for BNY Mellon Global Income: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Global Income: {activity_type: 'ProductSwitchOut', raw_amount: 510.03, parsed_amount: 510.03, amount_check: false, amount_absolute: 510.03, …}
ReportGenerator.tsx:1877 Processing activity for BNY Mellon Global Income: {activity_type: 'Investment', raw_amount: 500, parsed_amount: 500, amount_check: false, amount_absolute: 500, …}
ReportGenerator.tsx:1926 Fund BNY Mellon Global Income activity totals: {fundInvestment: 500, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 510.03, …}
ReportGenerator.tsx:1852 Fund BNY Mellon Multi-Asset Balanced (ID: 167) has 0 activity logs
ReportGenerator.tsx:1926 Fund BNY Mellon Multi-Asset Balanced activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Fidelity UK Smaller Companies (ID: 168) has 0 activity logs
ReportGenerator.tsx:1926 Fund Fidelity UK Smaller Companies activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund FTF Martin Currie UK Rising Dividends (ID: 169) has 2 activity logs
ReportGenerator.tsx:1868 Activities for FTF Martin Currie UK Rising Dividends: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for FTF Martin Currie UK Rising Dividends: {activity_type: 'ProductSwitchOut', raw_amount: 1350.96, parsed_amount: 1350.96, amount_check: false, amount_absolute: 1350.96, …}
ReportGenerator.tsx:1877 Processing activity for FTF Martin Currie UK Rising Dividends: {activity_type: 'Investment', raw_amount: 1300, parsed_amount: 1300, amount_check: false, amount_absolute: 1300, …}
ReportGenerator.tsx:1926 Fund FTF Martin Currie UK Rising Dividends activity totals: {fundInvestment: 1300, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 1350.96, …}
ReportGenerator.tsx:1852 Fund RL Sustainable World Trust (ID: 170) has 2 activity logs
ReportGenerator.tsx:1868 Activities for RL Sustainable World Trust: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for RL Sustainable World Trust: {activity_type: 'ProductSwitchOut', raw_amount: 2019.56, parsed_amount: 2019.56, amount_check: false, amount_absolute: 2019.56, …}
ReportGenerator.tsx:1877 Processing activity for RL Sustainable World Trust: {activity_type: 'Investment', raw_amount: 2000, parsed_amount: 2000, amount_check: false, amount_absolute: 2000, …}
ReportGenerator.tsx:1926 Fund RL Sustainable World Trust activity totals: {fundInvestment: 2000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 2019.56, …}
ReportGenerator.tsx:1852 Fund Stewart Investors Worldwide Leaders  (ID: 171) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Stewart Investors Worldwide Leaders : (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Stewart Investors Worldwide Leaders : {activity_type: 'ProductSwitchOut', raw_amount: 2089.06, parsed_amount: 2089.06, amount_check: false, amount_absolute: 2089.06, …}
ReportGenerator.tsx:1877 Processing activity for Stewart Investors Worldwide Leaders : {activity_type: 'Investment', raw_amount: 2000, parsed_amount: 2000, amount_check: false, amount_absolute: 2000, …}
ReportGenerator.tsx:1926 Fund Stewart Investors Worldwide Leaders  activity totals: {fundInvestment: 2000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 2089.06, …}
ReportGenerator.tsx:1852 Fund Historical Funds (ID: 172) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Historical Funds: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'ProductSwitchOut', raw_amount: 2614.74, parsed_amount: 2614.74, amount_check: false, amount_absolute: 2614.74, …}
ReportGenerator.tsx:1877 Processing activity for Historical Funds: {activity_type: 'Investment', raw_amount: 2700.08, parsed_amount: 2700.08, amount_check: false, amount_absolute: 2700.08, …}
ReportGenerator.tsx:1926 Fund Historical Funds activity totals: {fundInvestment: 2700.08, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 2614.74, …}
ReportGenerator.tsx:1852 Fund Vanguard Life Strategy 80% Equity A Acc (ID: 173) has 0 activity logs
ReportGenerator.tsx:1926 Fund Vanguard Life Strategy 80% Equity A Acc activity totals: {fundInvestment: 0, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund Vanguard Life Strategy 40% Equity A Acc (ID: 174) has 2 activity logs
ReportGenerator.tsx:1868 Activities for Vanguard Life Strategy 40% Equity A Acc: (2) [{…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Vanguard Life Strategy 40% Equity A Acc: {activity_type: 'ProductSwitchOut', raw_amount: 1354.65, parsed_amount: 1354.65, amount_check: false, amount_absolute: 1354.65, …}
ReportGenerator.tsx:1877 Processing activity for Vanguard Life Strategy 40% Equity A Acc: {activity_type: 'Investment', raw_amount: 1400.01, parsed_amount: 1400.01, amount_check: false, amount_absolute: 1400.01, …}
ReportGenerator.tsx:1926 Fund Vanguard Life Strategy 40% Equity A Acc activity totals: {fundInvestment: 1400.01, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 1354.65, …}
ReportGenerator.tsx:2004 Calculating standardized IRR for product 29 with fund IDs: (10) [165, 166, 167, 168, 169, 170, 171, 172, 173, 174]
ReportGenerator.tsx:2021  GET http://localhost:3000/api/portfolios/208/latest_irr 404 (Not Found)
dispatchXhrRequest @ axios.js?v=cc98fab4:1637
xhr @ axios.js?v=cc98fab4:1517
dispatchRequest @ axios.js?v=cc98fab4:1992
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
auth.ts:227 API Error: Request failed with status code 404
(anonymous) @ auth.ts:227
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
auth.ts:228 Request URL: /api/portfolios/208/latest_irr
(anonymous) @ auth.ts:228
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
auth.ts:229 Request Method: get
(anonymous) @ auth.ts:229
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
auth.ts:230 Response Status: 404
(anonymous) @ auth.ts:230
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
auth.ts:231 Response Data: {detail: 'Not Found'}
(anonymous) @ auth.ts:231
Promise.then
_request @ axios.js?v=cc98fab4:2195
request @ axios.js?v=cc98fab4:2104
Axios.<computed> @ axios.js?v=cc98fab4:2232
wrap @ axios.js?v=cc98fab4:8
generateReport @ ReportGenerator.tsx:2021
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
ReportGenerator.tsx:2036 Error fetching portfolio IRR for inactive product 29: AxiosError {message: 'Request failed with status code 404', name: 'AxiosError', code: 'ERR_BAD_REQUEST', config: {…}, request: XMLHttpRequest, …}
generateReport @ ReportGenerator.tsx:2036
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
irrDataService.ts:131 🚀 [IRR DEBUG] Starting getOptimizedIRRData with params: {portfolioId: 208, portfolioFundIds: Array(10), endDate: undefined, includeHistorical: false}
irrDataService.ts:141 📋 [IRR DEBUG] Strategy 1: Checking for stored portfolio IRR
irrDataService.ts:143 📋 [IRR DEBUG] Portfolio ID provided: 208, fetching stored IRR...
irrDataService.ts:44 🔍 [IRR DEBUG] Fetching stored portfolio IRR for portfolio 208
irrDataService.ts:45 🔍 [IRR DEBUG] API endpoint: /api/portfolios/208/latest-irr
irrDataService.ts:49 🔍 [IRR DEBUG] Portfolio IRR API response: {status: 200, data: {…}, hasData: true, irrResult: -0.2, irrResultType: 'number', …}
irrDataService.ts:60 🔍 [IRR DEBUG] Extracted IRR result: -0.2 (type: number)
irrDataService.ts:145 📋 [IRR DEBUG] Stored portfolio IRR result: -0.2
irrDataService.ts:148 ✅ [IRR DEBUG] Using stored portfolio IRR: -0.2% for portfolio 208
irrDataService.ts:160 Retrieved undefined stored fund IRRs
irrDataService.ts:169 📋 [IRR DEBUG] Strategy 3: Checking if IRR calculation is needed
irrDataService.ts:170 📋 [IRR DEBUG] Calculation decision factors: {noStoredIRR: false, includeHistorical: false, hasEndDate: false, needsCalculation: undefined, portfolioFundIdsLength: 10}
irrDataService.ts:203 ⏭️ [IRR DEBUG] Skipping IRR calculation - needsCalculation: undefined, fundIds length: 10
irrDataService.ts:213 🎯 [IRR DEBUG] Final getOptimizedIRRData result: {portfolioIRR: -0.2, fundIRRs: {…}, historicalIRR: null, irrDate: 'latest'}
ReportGenerator.tsx:2322 - Total fund summaries: 10
ReportGenerator.tsx:2323 - Active funds: 10
ReportGenerator.tsx:2324 - Inactive funds: 0
ReportGenerator.tsx:2325 - All fund statuses: (10) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1478 Product Flexible Transitions Account has 4 portfolio funds: (4) [{…}, {…}, {…}, {…}]
ReportGenerator.tsx:1514 Fetching activity logs for 4 portfolio funds: (4) [175, 176, 177, 178]
ReportGenerator.tsx:1521 Retrieved 109 total activity logs for product Flexible Transitions Account
ReportGenerator.tsx:1522 Sample activities: (3) [{…}, {…}, {…}]
valuationDataService.ts:145 🚀 Batch fetching ALL historical valuations for 4 funds (eliminates 4 individual requests)
valuationDataService.ts:164 ✅ Batch historical valuation fetch complete: 16 total valuations for 4 funds
ReportGenerator.tsx:1669 Processing 109 activity logs for product Flexible Transitions Account
ReportGenerator.tsx:1716 Product Flexible Transitions Account activity totals: {totalInvestment: 524535.49, totalWithdrawal: 79048.87, totalSwitchIn: 25000, totalSwitchOut: 231646.62, productStartDate: '2020-10-01', …}
ReportGenerator.tsx:1852 Fund Cash (ID: 175) has 3 activity logs
ReportGenerator.tsx:1868 Activities for Cash: (3) [{…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'Investment', raw_amount: 310695.49, parsed_amount: 310695.49, amount_check: false, amount_absolute: 310695.49, …}
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'FundSwitchOut', raw_amount: 231646.62, parsed_amount: 231646.62, amount_check: false, amount_absolute: 231646.62, …}
ReportGenerator.tsx:1877 Processing activity for Cash: {activity_type: 'Withdrawal', raw_amount: 79048.87, parsed_amount: 79048.87, amount_check: false, amount_absolute: 79048.87, …}
ReportGenerator.tsx:1926 Fund Cash activity totals: {fundInvestment: 310695.49, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund LV= Balanced Index (ID: 176) has 100 activity logs
ReportGenerator.tsx:1868 Activities for LV= Balanced Index: (100) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
ReportGenerator.tsx:1877 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'Investment', raw_amount: 25000, parsed_amount: 25000, amount_check: false, amount_absolute: 25000, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'Investment', raw_amount: 18335, parsed_amount: 18335, amount_check: false, amount_absolute: 18335, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'RegularInvestment', raw_amount: 180, parsed_amount: 180, amount_check: false, amount_absolute: 180, …}
 Processing activity for LV= Balanced Index: {activity_type: 'TaxUplift', raw_amount: 45, parsed_amount: 45, amount_check: false, amount_absolute: 45, …}
 Fund LV= Balanced Index activity totals: {fundInvestment: 52155, fundRegularInvestment: 0, fundTaxUplift: 2205, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
 Fund FGF Balanced S2 (ID: 177) has 2 activity logs
 Activities for FGF Balanced S2: (2) [{…}, {…}]
 Processing activity for FGF Balanced S2: {activity_type: 'Investment', raw_amount: 50000, parsed_amount: 50000, amount_check: false, amount_absolute: 50000, …}
 Processing activity for FGF Balanced S2: {activity_type: 'FundSwitchIn', raw_amount: 25000, parsed_amount: 25000, amount_check: false, amount_absolute: 25000, …}
 Fund FGF Balanced S2 activity totals: {fundInvestment: 50000, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:1852 Fund LV= Smoothed Managed Balanced (ID: 178) has 4 activity logs
ReportGenerator.tsx:1868 Activities for LV= Smoothed Managed Balanced: (4) [{…}, {…}, {…}, {…}]
ReportGenerator.tsx:1877 Processing activity for LV= Smoothed Managed Balanced: {activity_type: 'Investment', raw_amount: 30000, parsed_amount: 30000, amount_check: false, amount_absolute: 30000, …}
ReportGenerator.tsx:1877 Processing activity for LV= Smoothed Managed Balanced: {activity_type: 'Investment', raw_amount: 25000, parsed_amount: 25000, amount_check: false, amount_absolute: 25000, …}
ReportGenerator.tsx:1877 Processing activity for LV= Smoothed Managed Balanced: {activity_type: 'Investment', raw_amount: 18335, parsed_amount: 18335, amount_check: false, amount_absolute: 18335, …}
ReportGenerator.tsx:1877 Processing activity for LV= Smoothed Managed Balanced: {activity_type: 'Investment', raw_amount: 38350, parsed_amount: 38350, amount_check: false, amount_absolute: 38350, …}
ReportGenerator.tsx:1926 Fund LV= Smoothed Managed Balanced activity totals: {fundInvestment: 111685, fundRegularInvestment: 0, fundTaxUplift: 0, fundProductSwitchIn: 0, fundProductSwitchOut: 0, …}
ReportGenerator.tsx:2004 Calculating standardized IRR for product 30 with fund IDs: (4) [175, 176, 177, 178]
irrDataService.ts:131 🚀 [IRR DEBUG] Starting getOptimizedIRRData with params: {portfolioId: 209, portfolioFundIds: Array(4), endDate: undefined, includeHistorical: false}
irrDataService.ts:141 📋 [IRR DEBUG] Strategy 1: Checking for stored portfolio IRR
irrDataService.ts:143 📋 [IRR DEBUG] Portfolio ID provided: 209, fetching stored IRR...
irrDataService.ts:44 🔍 [IRR DEBUG] Fetching stored portfolio IRR for portfolio 209
irrDataService.ts:45 🔍 [IRR DEBUG] API endpoint: /api/portfolios/209/latest-irr
irrDataService.ts:49 🔍 [IRR DEBUG] Portfolio IRR API response: {status: 200, data: {…}, hasData: true, irrResult: 4.4, irrResultType: 'number', …}
irrDataService.ts:60 🔍 [IRR DEBUG] Extracted IRR result: 4.4 (type: number)
irrDataService.ts:145 📋 [IRR DEBUG] Stored portfolio IRR result: 4.4
irrDataService.ts:148 ✅ [IRR DEBUG] Using stored portfolio IRR: 4.4% for portfolio 209
irrDataService.ts:160 Retrieved undefined stored fund IRRs
irrDataService.ts:169 📋 [IRR DEBUG] Strategy 3: Checking if IRR calculation is needed
irrDataService.ts:170 📋 [IRR DEBUG] Calculation decision factors: {noStoredIRR: false, includeHistorical: false, hasEndDate: false, needsCalculation: undefined, portfolioFundIdsLength: 4}
irrDataService.ts:203 ⏭️ [IRR DEBUG] Skipping IRR calculation - needsCalculation: undefined, fundIds length: 4
irrDataService.ts:213 🎯 [IRR DEBUG] Final getOptimizedIRRData result: {portfolioIRR: 4.4, fundIRRs: {…}, historicalIRR: null, irrDate: 'latest'}
ReportGenerator.tsx:2058 Optimized IRR for active product 30: 4.4% (source: latest)
ReportGenerator.tsx:2322 - Total fund summaries: 4
ReportGenerator.tsx:2323 - Active funds: 4
ReportGenerator.tsx:2324 - Inactive funds: 0
ReportGenerator.tsx:2325 - All fund statuses: (4) [{…}, {…}, {…}, {…}]
ReportGenerator.tsx:2456 Total portfolio fund IDs collected for IRR calculation: {total: 24, unique: 24, duplicatesRemoved: 0}
ReportGenerator.tsx:2463 Calculating standardized IRR for portfolio fund IDs: (24) [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178]
ReportGenerator.tsx:2484 🔍 [DATE FORMAT] selectedValuationDate is null/undefined, formattedDate will be undefined
generateReport @ ReportGenerator.tsx:2484
await in generateReport
callCallback2 @ chunk-QYFCA5BS.js?v=cc98fab4:3680
invokeGuardedCallbackDev @ chunk-QYFCA5BS.js?v=cc98fab4:3705
invokeGuardedCallback @ chunk-QYFCA5BS.js?v=cc98fab4:3739
invokeGuardedCallbackAndCatchFirstError @ chunk-QYFCA5BS.js?v=cc98fab4:3742
executeDispatch @ chunk-QYFCA5BS.js?v=cc98fab4:7046
processDispatchQueueItemsInOrder @ chunk-QYFCA5BS.js?v=cc98fab4:7066
processDispatchQueue @ chunk-QYFCA5BS.js?v=cc98fab4:7075
dispatchEventsForPlugins @ chunk-QYFCA5BS.js?v=cc98fab4:7083
(anonymous) @ chunk-QYFCA5BS.js?v=cc98fab4:7206
batchedUpdates$1 @ chunk-QYFCA5BS.js?v=cc98fab4:18966
batchedUpdates @ chunk-QYFCA5BS.js?v=cc98fab4:3585
dispatchEventForPluginEventSystem @ chunk-QYFCA5BS.js?v=cc98fab4:7205
dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay @ chunk-QYFCA5BS.js?v=cc98fab4:5484
dispatchEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5478
dispatchDiscreteEvent @ chunk-QYFCA5BS.js?v=cc98fab4:5455
ReportGenerator.tsx:2487 Using optimized batch IRR service for total IRR: {portfolioFundIds: Array(24), irrDate: undefined}
irrDataService.ts:131 🚀 [IRR DEBUG] Starting getOptimizedIRRData with params: {portfolioFundIds: Array(24), endDate: undefined, includeHistorical: false}
irrDataService.ts:141 📋 [IRR DEBUG] Strategy 1: Checking for stored portfolio IRR
irrDataService.ts:154 ⚠️ [IRR DEBUG] No portfolio ID provided, skipping stored portfolio IRR lookup
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
irrDataService.ts:160 Retrieved undefined stored fund IRRs
irrDataService.ts:169 📋 [IRR DEBUG] Strategy 3: Checking if IRR calculation is needed
irrDataService.ts:170 📋 [IRR DEBUG] Calculation decision factors: {noStoredIRR: true, includeHistorical: false, hasEndDate: false, needsCalculation: true, portfolioFundIdsLength: 24}
irrDataService.ts:179 🔄 [IRR DEBUG] Calculating IRR due to: {noStoredIRR: true, includeHistorical: false, hasEndDate: false}
irrDataService.ts:95 🔄 [IRR DEBUG] Calculating IRR using standardized endpoint: {portfolioFundIds: Array(24), endDate: undefined}
irrDataService.ts:96 🔍 DEBUG: irrDataService portfolioFundIds being sent: (24) [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178]
api.ts:607 🔍 DEBUG: api.ts calculateStandardizedMultipleFundsIRR called with: {portfolioFundIds: Array(24), irrDate: undefined}
api.ts:608 🔍 DEBUG: portfolioFundIds being sent to backend: (24) [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178]
irrDataService.ts:106 🔄 [IRR DEBUG] Raw API response from calculateStandardizedMultipleFundsIRR: {success: true, irr_percentage: 4.4, irr_decimal: 0.04417634788485536, calculation_date: '2025-07-01', portfolio_fund_ids: Array(24), …}
irrDataService.ts:118 🔄 [IRR DEBUG] Extracted IRR result: 4.4
irrDataService.ts:190 🔄 [IRR DEBUG] Calculated IRR result: 4.4
irrDataService.ts:195 ✅ [IRR DEBUG] Using calculated IRR as portfolio IRR: 4.4
irrDataService.ts:213 🎯 [IRR DEBUG] Final getOptimizedIRRData result: {portfolioIRR: 4.4, fundIRRs: {…}, historicalIRR: null, irrDate: 'calculated'}
ReportGenerator.tsx:2500 🎯 [TOTAL IRR DEBUG] Optimized total IRR response: {portfolioIRR: 4.4, fundIRRs: {…}, historicalIRR: null, irrDate: 'calculated'}
ReportGenerator.tsx:2501 🎯 [TOTAL IRR DEBUG] portfolioIRR field: 4.4
ReportGenerator.tsx:2502 🎯 [TOTAL IRR DEBUG] portfolioIRR type: number
ReportGenerator.tsx:2506 ✅ [TOTAL IRR DEBUG] Optimized total IRR calculation complete: 4.4
ReportGenerator.tsx:2581 🔍 [VALUATION DATE DEBUG] Setting selectedValuationDate in reportData (success path): {effectiveValuationDate: '2023-04-01', originalSelectedValuationDate: null, finalValuationDate: '2023-04-01'}
ReportGenerator.tsx:2589 🔍 [PRODUCT OWNER ORDER DEBUG] Current productOwnerOrder state: ['Stephen Meddle']
ReportGenerator.tsx:2590 🔍 [PRODUCT OWNER ORDER DEBUG] productOwnerOrder length: 1
ReportGenerator.tsx:433 🔍 [EXTRACT OWNERS DEBUG] Starting extraction for 3 products
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 1: {id: 28, name: 'Stocks & Shares ISA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 28
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 2: {id: 29, name: 'GIA', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 29
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:436 🔍 [EXTRACT OWNERS DEBUG] Product 3: {id: 30, name: 'Flexible Transitions Account', product_owner_name: 'Stephen Meddle', product_owners_array: Array(1), product_owners_count: 1}
ReportGenerator.tsx:449 🔍 [EXTRACT OWNERS DEBUG] Using Method 2 (product_owners array) for product 30
ReportGenerator.tsx:451 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Owner 1: {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:20 🔍 [PRODUCT OWNER UTILS DEBUG] Input owner (formal): {id: 19, firstname: 'Stephen', surname: 'Meddle', known_as: 'Steve'}
productOwnerUtils.ts:31 🔍 [PRODUCT OWNER UTILS DEBUG] Processed fields (formal): {firstname: 'Stephen', surname: 'Meddle', knownAs: 'Steve'}
productOwnerUtils.ts:40 🔍 [PRODUCT OWNER UTILS DEBUG] Using Priority 1 (firstname + surname): Stephen Meddle
ReportGenerator.tsx:460 🔍 [EXTRACT OWNERS DEBUG] Method 2 - getProductOwnerFormalDisplayName result: Stephen Meddle
ReportGenerator.tsx:463 🔍 [EXTRACT OWNERS DEBUG] Method 2 - Adding name: Stephen Meddle
ReportGenerator.tsx:482 🔍 [EXTRACT OWNERS DEBUG] Final result: ['Stephen Meddle']
ReportGenerator.tsx:2598 🔍 [PRODUCT OWNER DEBUG - FINAL] Using extractProductOwners with known_as support: ['Stephen Meddle']
ReportDisplayPage.tsx:54 🔍 [REPORT DISPLAY DEBUG] Initializing report data...
ReportDisplayPage.tsx:64 🔍 [REPORT DISPLAY DEBUG] Received report data with 3 products
ReportDisplayPage.tsx:81 🎯 [OPTIMIZATION] Using pre-fetched portfolio IRR values from reportData: {28: 6.8, 29: -0.2, 30: 4.4}
IRRCalculationService.ts:603 Using pre-selected historical IRR dates from report generation
IRRCalculationService.ts:603 Selected dates: {28: Array(1), 29: Array(1), 30: Array(2)}
IRRCalculationService.ts:603 Available dates: (5) [{…}, {…}, {…}, {…}, {…}]
IRRCalculationService.ts:603 🔄 [DATA CONSISTENCY] Forcing fresh historical IRR data fetch to match summary table data
IRRCalculationService.ts:603 ⚠️ No pre-fetched historical IRR data available, falling back to API calls
IRRCalculationService.ts:603 Product 28 (Stocks & Shares ISA) selected dates: ['2023-04-01']
IRRCalculationService.ts:603 Product 29 (GIA) selected dates: ['2023-04-01']
IRRCalculationService.ts:603 Product 30 (Flexible Transitions Account) selected dates: (2) ['2023-04-01', '2022-02-01']
ReportContainer.tsx:142 🔍 [REPORT CONTAINER DEBUG] productOwnerDisplay calculation: {customProductOwnerNames: null, reportDataProductOwnerNames: Array(1), reportDataProductOwnerNamesLength: 1}
ReportContainer.tsx:162 🔍 [REPORT CONTAINER DEBUG] Final display result: Stephen Meddle
ReportContainer.tsx:142 🔍 [REPORT CONTAINER DEBUG] productOwnerDisplay calculation: {customProductOwnerNames: null, reportDataProductOwnerNames: Array(1), reportDataProductOwnerNamesLength: 1}
ReportContainer.tsx:162 🔍 [REPORT CONTAINER DEBUG] Final display result: Stephen Meddle
SummaryTab.tsx:103 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
SummaryTab.tsx:111 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🎯 [IRR HISTORY] Using actual user-selected dates: (2) ['2022-02-01', '2023-04-01']
 🎯 [IRR HISTORY] Using per-product date selections: {28: Array(1), 29: Array(1), 30: Array(2)}
 🔍 [VALUATION DATE FILTER] Processing historical dates filter: {currentValuationDate: '2023-04-01', memoizedSelectedDates: Array(2), memoizedPerProductDates: {…}}
 🔍 [VALUATION DATE FILTER] Removed current valuation date from historical columns: {currentValuationDate: '2023-04-01', originalDates: Array(2), filteredHistoricalDates: Array(1), removedCount: 1}
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
mountIndeterminateComponent @ chunk-QYFCA5BS.js:14974
beginWork @ chunk-QYFCA5BS.js:15962
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
mountIndeterminateComponent @ chunk-QYFCA5BS.js:14974
beginWork @ chunk-QYFCA5BS.js:15962
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🎯 [IRR HISTORY] Using actual user-selected dates: (2) ['2022-02-01', '2023-04-01']
 🎯 [IRR HISTORY] Using per-product date selections: {28: Array(1), 29: Array(1), 30: Array(2)}
 🔍 [VALUATION DATE FILTER] Processing historical dates filter: {currentValuationDate: '2023-04-01', memoizedSelectedDates: Array(2), memoizedPerProductDates: {…}}
 🔍 [VALUATION DATE FILTER] Removed current valuation date from historical columns: {currentValuationDate: '2023-04-01', originalDates: Array(2), filteredHistoricalDates: Array(1), removedCount: 1}
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
mountIndeterminateComponent @ chunk-QYFCA5BS.js:15024
beginWork @ chunk-QYFCA5BS.js:15962
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
mountIndeterminateComponent @ chunk-QYFCA5BS.js:15024
beginWork @ chunk-QYFCA5BS.js:15962
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🎯 [IRR SUMMARY MEMOIZATION] ProductIds memoized: {rawLength: 3, memoizedLength: 3, sameReference: true}
 🎯 [IRR SUMMARY MEMOIZATION] SelectedDates memoized: {rawLength: 1, memoizedLength: 1, sameReference: true}
 🔄 [IRR SUMMARY TABLE] useEffect triggered: {productIdsLength: 3, selectedDatesLength: 1, clientGroupIds: undefined, productIds: Array(3), selectedDates: Array(1)}
 🔍 [IRR SUMMARY TABLE] Request details: {productIds: Array(3), uniqueProductIds: Array(3), selectedDates: Array(1), clientGroupIds: undefined}
 🔍 [IRR HISTORY SUMMARY] Fetching data with request: {product_ids: Array(3), selected_dates: Array(1), client_group_ids: undefined}
 🔍 [IRR HISTORY SUMMARY] Fetching data with request: {product_ids: Array(3), selected_dates: Array(1), client_group_ids: undefined}
 🔍 [GLOBAL IRR REQUEST MANAGER] Processing request: irr_summary_28,29,30_2022-02-01_none
 🚀 [GLOBAL IRR REQUEST MANAGER] Starting new request: irr_summary_28,29,30_2022-02-01_none
 🔄 [Validation] Computing validated dates for 3 products
 ✅ [Validation] Product 28 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 29 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 30 has 2 valid dates: (2) ['2023-04-01', '2022-02-01']
 🔍 [IRR HISTORY DEBUG] Component loaded with: {hasReportData: true, productCount: 3, hasIrrHistoryData: true, irrHistoryDataLength: 3, loadingState: {…}, …}
 🔧 [MEMOIZATION DEBUG] ProductIds changed: (3) [28, 29, 30]
 🔧 [MEMOIZATION DEBUG] SelectedDates changed: (2) ['2022-02-01', '2023-04-01']
 🔄 [Previous Funds] useEffect triggered {hasIrrHistoryData: true, irrHistoryDataLength: 3, hasProductSummaries: true, productSummariesLength: 3}
 🔄 [Previous Funds] Starting calculation with 2 dates: (2) ['2023-04-01', '2022-02-01']
 🔄 [Previous Funds] Using pre-computed validated dates for products: []
 🔍 [Previous Funds] Analyzing product 28: {productName: 'Stocks & Shares ISA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 28 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 28 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 28 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 29: {productName: 'GIA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 29 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 29 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 29 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 30: {productName: 'Flexible Transitions Account', totalFunds: 4, fundDetails: Array(4)}
 🔍 [Previous Funds] Product 30 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 30 - ALL FUNDS CHECK: {totalFunds: 4, allFundNames: Array(4), historicalFundsInAll: Array(0), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 30 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Final analysis: {totalProductsAnalyzed: 3, productsWithDynamicFunds: 0, dynamicFundDetails: Array(0)}
 ❌ [Previous Funds] No products with dynamic funds found - exiting
 🎯 [IRR SUMMARY MEMOIZATION] ProductIds memoized: {rawLength: 3, memoizedLength: 3, sameReference: true}
 🎯 [IRR SUMMARY MEMOIZATION] SelectedDates memoized: {rawLength: 1, memoizedLength: 1, sameReference: true}
 🔄 [IRR SUMMARY TABLE] useEffect triggered: {productIdsLength: 3, selectedDatesLength: 1, clientGroupIds: undefined, productIds: Array(3), selectedDates: Array(1)}
 🔍 [IRR SUMMARY TABLE] Request details: {productIds: Array(3), uniqueProductIds: Array(3), selectedDates: Array(1), clientGroupIds: undefined}
 🔍 [IRR HISTORY SUMMARY] Fetching data with request: {product_ids: Array(3), selected_dates: Array(1), client_group_ids: undefined}
 🔍 [IRR HISTORY SUMMARY] Fetching data with request: {product_ids: Array(3), selected_dates: Array(1), client_group_ids: undefined}
 🔍 [GLOBAL IRR REQUEST MANAGER] Processing request: irr_summary_28,29,30_2022-02-01_none
 🔄 [GLOBAL IRR REQUEST MANAGER] Request already in progress, waiting for existing request: irr_summary_28,29,30_2022-02-01_none
 🔄 [Validation] Computing validated dates for 3 products
 ✅ [Validation] Product 28 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 29 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 30 has 2 valid dates: (2) ['2023-04-01', '2022-02-01']
 🔍 [IRR HISTORY DEBUG] Component loaded with: {hasReportData: true, productCount: 3, hasIrrHistoryData: true, irrHistoryDataLength: 3, loadingState: {…}, …}
 🔧 [MEMOIZATION DEBUG] ProductIds changed: (3) [28, 29, 30]
 🔧 [MEMOIZATION DEBUG] SelectedDates changed: (2) ['2022-02-01', '2023-04-01']
 🔄 [Previous Funds] useEffect triggered {hasIrrHistoryData: true, irrHistoryDataLength: 3, hasProductSummaries: true, productSummariesLength: 3}
 🔄 [Previous Funds] Starting calculation with 2 dates: (2) ['2023-04-01', '2022-02-01']
 🔄 [Previous Funds] Using pre-computed validated dates for products: []
 🔍 [Previous Funds] Analyzing product 28: {productName: 'Stocks & Shares ISA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 28 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 28 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 28 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 29: {productName: 'GIA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 29 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 29 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 29 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 30: {productName: 'Flexible Transitions Account', totalFunds: 4, fundDetails: Array(4)}
 🔍 [Previous Funds] Product 30 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 30 - ALL FUNDS CHECK: {totalFunds: 4, allFundNames: Array(4), historicalFundsInAll: Array(0), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 30 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Final analysis: {totalProductsAnalyzed: 3, productsWithDynamicFunds: 0, dynamicFundDetails: Array(0)}
 ❌ [Previous Funds] No products with dynamic funds found - exiting
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
IRRHistoryTab.tsx:1850 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
IRRHistoryTab.tsx:1862 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
IRRHistoryTab.tsx:1915 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
IRRHistoryTab.tsx:1959 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:1959
(anonymous) @ IRRHistoryTab.tsx:2065
(anonymous) @ IRRHistoryTab.tsx:1323
IRRHistoryTab @ IRRHistoryTab.tsx:2080
renderWithHooks @ chunk-QYFCA5BS.js?v=cc98fab4:11596
updateFunctionComponent @ chunk-QYFCA5BS.js?v=cc98fab4:14635
beginWork @ chunk-QYFCA5BS.js?v=cc98fab4:15972
beginWork$1 @ chunk-QYFCA5BS.js?v=cc98fab4:19806
performUnitOfWork @ chunk-QYFCA5BS.js?v=cc98fab4:19251
workLoopSync @ chunk-QYFCA5BS.js?v=cc98fab4:19190
renderRootSync @ chunk-QYFCA5BS.js?v=cc98fab4:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js?v=cc98fab4:18728
workLoop @ chunk-QYFCA5BS.js?v=cc98fab4:197
flushWork @ chunk-QYFCA5BS.js?v=cc98fab4:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js?v=cc98fab4:384
IRRHistoryTab.tsx:2019 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2019
(anonymous) @ IRRHistoryTab.tsx:2065
(anonymous) @ IRRHistoryTab.tsx:1323
IRRHistoryTab @ IRRHistoryTab.tsx:2080
renderWithHooks @ chunk-QYFCA5BS.js?v=cc98fab4:11596
updateFunctionComponent @ chunk-QYFCA5BS.js?v=cc98fab4:14635
beginWork @ chunk-QYFCA5BS.js?v=cc98fab4:15972
beginWork$1 @ chunk-QYFCA5BS.js?v=cc98fab4:19806
performUnitOfWork @ chunk-QYFCA5BS.js?v=cc98fab4:19251
workLoopSync @ chunk-QYFCA5BS.js?v=cc98fab4:19190
renderRootSync @ chunk-QYFCA5BS.js?v=cc98fab4:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js?v=cc98fab4:18728
workLoop @ chunk-QYFCA5BS.js?v=cc98fab4:197
flushWork @ chunk-QYFCA5BS.js?v=cc98fab4:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js?v=cc98fab4:384
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
IRRHistoryTab.tsx:1850 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
IRRHistoryTab.tsx:1862 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
IRRHistoryTab.tsx:1915 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
IRRHistoryTab.tsx:1990 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
IRRHistoryTab.tsx:2053 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
IRRHistoryTab.tsx:777 🔄 [Previous Funds] useEffect triggered {hasIrrHistoryData: true, irrHistoryDataLength: 3, hasProductSummaries: true, productSummariesLength: 3}
IRRHistoryTab.tsx:801 🔄 [Previous Funds] Starting calculation with 2 dates: (2) ['2023-04-01', '2022-02-01']
IRRHistoryTab.tsx:802 🔄 [Previous Funds] Using pre-computed validated dates for products: (3) [Array(2), Array(2), Array(2)]
IRRHistoryTab.tsx:809 🔍 [Previous Funds] Analyzing product 28: {productName: 'Stocks & Shares ISA', totalFunds: 10, fundDetails: Array(10)}
IRRHistoryTab.tsx:825 🔍 [Previous Funds] Product 28 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
IRRHistoryTab.tsx:843 🔍 [Previous Funds] Product 28 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
IRRHistoryTab.tsx:858 🔍 [Previous Funds] Product 28 inactive funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:870 🔍 [Previous Funds] Product 28 historical funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:875 🔍 [Previous Funds] Product 28 total dynamic funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:809 🔍 [Previous Funds] Analyzing product 29: {productName: 'GIA', totalFunds: 10, fundDetails: Array(10)}
IRRHistoryTab.tsx:825 🔍 [Previous Funds] Product 29 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
IRRHistoryTab.tsx:843 🔍 [Previous Funds] Product 29 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
IRRHistoryTab.tsx:858 🔍 [Previous Funds] Product 29 inactive funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:870 🔍 [Previous Funds] Product 29 historical funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:875 🔍 [Previous Funds] Product 29 total dynamic funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:809 🔍 [Previous Funds] Analyzing product 30: {productName: 'Flexible Transitions Account', totalFunds: 4, fundDetails: Array(4)}
IRRHistoryTab.tsx:825 🔍 [Previous Funds] Product 30 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
IRRHistoryTab.tsx:843 🔍 [Previous Funds] Product 30 - ALL FUNDS CHECK: {totalFunds: 4, allFundNames: Array(4), historicalFundsInAll: Array(0), previousFundsInAll: Array(0)}
IRRHistoryTab.tsx:858 🔍 [Previous Funds] Product 30 inactive funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:870 🔍 [Previous Funds] Product 30 historical funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:875 🔍 [Previous Funds] Product 30 total dynamic funds: {count: 0, funds: Array(0)}
IRRHistoryTab.tsx:959 🔍 [Previous Funds] Final analysis: {totalProductsAnalyzed: 3, productsWithDynamicFunds: 0, dynamicFundDetails: Array(0)}
IRRHistoryTab.tsx:966 ❌ [Previous Funds] No products with dynamic funds found - exiting
historicalIRRService.ts:97 📊 Portfolio historical IRR fetched for product 28: {product_id: 28, portfolio_historical_irr: Array(2), count: 2}
IRRCalculationService.ts:603 Fetched 2 historical IRR records for product 28
IRRCalculationService.ts:603 Created 1 portfolio historical IRR records for product 28: [{…}]
IRRCalculationService.ts:603 Created data structure for product 28: {product_id: 28, product_name: 'Stocks & Shares ISA', portfolio_historical_irr: Array(1), funds_historical_irr: Array(10)}
historicalIRRService.ts:97 📊 Portfolio historical IRR fetched for product 30: {product_id: 30, portfolio_historical_irr: Array(4), count: 4}
IRRCalculationService.ts:603 Fetched 4 historical IRR records for product 30
IRRCalculationService.ts:603 Created 2 portfolio historical IRR records for product 30: (2) [{…}, {…}]
IRRCalculationService.ts:603 Created data structure for product 30: {product_id: 30, product_name: 'Flexible Transitions Account', portfolio_historical_irr: Array(2), funds_historical_irr: Array(4)}
 📊 Portfolio historical IRR fetched for product 29: {product_id: 29, portfolio_historical_irr: Array(2), count: 2}
 Fetched 2 historical IRR records for product 29
 Created 1 portfolio historical IRR records for product 29: [{…}]
 Created data structure for product 29: {product_id: 29, product_name: 'GIA', portfolio_historical_irr: Array(1), funds_historical_irr: Array(10)}
 Final processed historical IRR data: (3) [{…}, {…}, {…}]
 🔍 [IRR HISTORY DEBUG] Processed historical IRR data: {length: 3, sample: {…}}
 🎯 [REPORT DISPLAY] Calculating real-time total IRR for 24 portfolio funds: (24) [156, 157, 158, 159, 164, 160, 161, 162, 163, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 176, 178, 175]
 🎯 [REPORT DISPLAY] Using end date for real-time IRR: 2023-04-30
 🚀 [IRR DEBUG] Starting getOptimizedIRRData with params: {portfolioFundIds: Array(24), endDate: '2023-04-30', includeHistorical: false}
 📋 [IRR DEBUG] Strategy 1: Checking for stored portfolio IRR
 ⚠️ [IRR DEBUG] No portfolio ID provided, skipping stored portfolio IRR lookup
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14635
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14635
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🔄 [Validation] Computing validated dates for 3 products
 ✅ [Validation] Product 28 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 29 has 1 valid dates: ['2023-04-01']
 ✅ [Validation] Product 30 has 2 valid dates: (2) ['2023-04-01', '2022-02-01']
 🔄 [Previous Funds] useEffect triggered {hasIrrHistoryData: true, irrHistoryDataLength: 3, hasProductSummaries: true, productSummariesLength: 3}
 🔄 [Previous Funds] Starting calculation with 2 dates: (2) ['2023-04-01', '2022-02-01']
 🔄 [Previous Funds] Using pre-computed validated dates for products: (3) [Array(2), Array(2), Array(2)]
 🔍 [Previous Funds] Analyzing product 28: {productName: 'Stocks & Shares ISA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 28 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 28 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 28 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 29: {productName: 'GIA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 29 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 29 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 29 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 30: {productName: 'Flexible Transitions Account', totalFunds: 4, fundDetails: Array(4)}
 🔍 [Previous Funds] Product 30 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 30 - ALL FUNDS CHECK: {totalFunds: 4, allFundNames: Array(4), historicalFundsInAll: Array(0), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 30 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Final analysis: {totalProductsAnalyzed: 3, productsWithDynamicFunds: 0, dynamicFundDetails: Array(0)}
 ❌ [Previous Funds] No products with dynamic funds found - exiting
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14635
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14635
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 Retrieved undefined stored fund IRRs
 📋 [IRR DEBUG] Strategy 3: Checking if IRR calculation is needed
 📋 [IRR DEBUG] Calculation decision factors: {noStoredIRR: true, includeHistorical: false, hasEndDate: true, needsCalculation: true, portfolioFundIdsLength: 24}
 🔄 [IRR DEBUG] Calculating IRR due to: {noStoredIRR: true, includeHistorical: false, hasEndDate: true}
 🔄 [IRR DEBUG] Calculating IRR using standardized endpoint: {portfolioFundIds: Array(24), endDate: '2023-04-30'}
 🔍 DEBUG: irrDataService portfolioFundIds being sent: (24) [156, 157, 158, 159, 164, 160, 161, 162, 163, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 176, 178, 175]
 🔄 [Previous Funds] useEffect triggered {hasIrrHistoryData: true, irrHistoryDataLength: 3, hasProductSummaries: true, productSummariesLength: 3}
 🔄 [Previous Funds] Starting calculation with 2 dates: (2) ['2023-04-01', '2022-02-01']
 🔄 [Previous Funds] Using pre-computed validated dates for products: (3) [Array(2), Array(2), Array(2)]
 🔍 [Previous Funds] Analyzing product 28: {productName: 'Stocks & Shares ISA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 28 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 28 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 28 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 28 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 29: {productName: 'GIA', totalFunds: 10, fundDetails: Array(10)}
 🔍 [Previous Funds] Product 29 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 29 - ALL FUNDS CHECK: {totalFunds: 10, allFundNames: Array(10), historicalFundsInAll: Array(1), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 29 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 29 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Analyzing product 30: {productName: 'Flexible Transitions Account', totalFunds: 4, fundDetails: Array(4)}
 🔍 [Previous Funds] Product 30 - Historical/Previous Funds check: {foundHistoricalFunds: 0, historicalFundsDetails: Array(0)}
 🔍 [Previous Funds] Product 30 - ALL FUNDS CHECK: {totalFunds: 4, allFundNames: Array(4), historicalFundsInAll: Array(0), previousFundsInAll: Array(0)}
 🔍 [Previous Funds] Product 30 inactive funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 historical funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Product 30 total dynamic funds: {count: 0, funds: Array(0)}
 🔍 [Previous Funds] Final analysis: {totalProductsAnalyzed: 3, productsWithDynamicFunds: 0, dynamicFundDetails: Array(0)}
 ❌ [Previous Funds] No products with dynamic funds found - exiting
 🔍 DEBUG: api.ts calculateStandardizedMultipleFundsIRR called with: {portfolioFundIds: Array(24), irrDate: '2023-04-30'}
 🔍 DEBUG: portfolioFundIds being sent to backend: (24) [156, 157, 158, 159, 164, 160, 161, 162, 163, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 176, 178, 175]
 ✅ [GLOBAL IRR REQUEST MANAGER] Request completed successfully: irr_summary_28,29,30_2022-02-01_none
 ✅ [IRR HISTORY SUMMARY] Data fetched successfully: {success: true, data: {…}}
 ✅ [IRR HISTORY SUMMARY] Data fetched successfully: {success: true, data: {…}}
 🔍 [IRR SUMMARY TABLE] Backend response analysis: {productRowsCount: 3, portfolioTotalsCount: 1, productRowsSample: Array(3), uniqueProductIdsInResponse: Array(3), requestedProductIds: Array(3)}
 ✅ [IRR SUMMARY TABLE] Received flat rows from backend: {totalRows: 3, expectedRows: 3, structure: 'flat'}
 🔍 [IRR SUMMARY TABLE] Setting table data: {productRows: Array(3), portfolioTotals: Array(1), dateHeaders: Array(1)}
 🔍 [IRR SUMMARY TABLE] Backend response analysis: {productRowsCount: 3, portfolioTotalsCount: 1, productRowsSample: Array(3), uniqueProductIdsInResponse: Array(3), requestedProductIds: Array(3)}
 ✅ [IRR SUMMARY TABLE] Received flat rows from backend: {totalRows: 3, expectedRows: 3, structure: 'flat'}
 🔍 [IRR SUMMARY TABLE] Setting table data: {productRows: Array(3), portfolioTotals: Array(1), dateHeaders: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [IRR SUMMARY DEBUG] Looking for productId: 30, date: 2022-02-01
 🔍 [IRR SUMMARY DEBUG] Available productRows: (3) [{…}, {…}, {…}]
 🔍 [IRR SUMMARY DEBUG] Found row for productId 30, date 2022-02-01: {product_id: 30, product_name: 'Flexible Transitions Account', irr_date: '2022-02-01', irr_result: 6.3, portfolio_id: undefined}
 🔍 [IRR SUMMARY DEBUG] Returning IRR for productId 30, date 2022-02-01: 6.3
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🎯 [CLIENT GROUP RISK] Calculated client group weight risk: {productCount: 3, totalValue: 541681, weightedRiskSum: 1969263.9399999997, calculatedRisk: '3.6', productBreakdown: Array(3)}
 📊 [IRR SUMMARY] Using backend IRR for date 2022-02-01: 6.3% (calculated from portfolios with valuations)
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [IRR SUMMARY DEBUG] Looking for productId: 30, date: 2022-02-01
 🔍 [IRR SUMMARY DEBUG] Available productRows: (3) [{…}, {…}, {…}]
 🔍 [IRR SUMMARY DEBUG] Found row for productId 30, date 2022-02-01: {product_id: 30, product_name: 'Flexible Transitions Account', irr_date: '2022-02-01', irr_result: 6.3, portfolio_id: undefined}
 🔍 [IRR SUMMARY DEBUG] Returning IRR for productId 30, date 2022-02-01: 6.3
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🎯 [CLIENT GROUP RISK] Calculated client group weight risk: {productCount: 3, totalValue: 541681, weightedRiskSum: 1969263.9399999997, calculatedRisk: '3.6', productBreakdown: Array(3)}
 📊 [IRR SUMMARY] Using backend IRR for date 2022-02-01: 6.3% (calculated from portfolios with valuations)
 🔄 [IRR DEBUG] Raw API response from calculateStandardizedMultipleFundsIRR: {success: true, irr_percentage: 0.6, irr_decimal: 0.00612587541655607, calculation_date: '2023-04-30', portfolio_fund_ids: Array(24), …}
 🔄 [IRR DEBUG] Extracted IRR result: 0.6
 🔄 [IRR DEBUG] Calculated IRR result: 0.6
 ✅ [IRR DEBUG] Using calculated IRR as portfolio IRR: 0.6
 🎯 [IRR DEBUG] Final getOptimizedIRRData result: {portfolioIRR: 0.6, fundIRRs: {…}, historicalIRR: null, irrDate: '2023-04-30'}
 🎯 [REPORT DISPLAY] Real-time total IRR response: {portfolioIRR: 0.6, fundIRRs: {…}, historicalIRR: null, irrDate: '2023-04-30'}
 🎯 [REPORT DISPLAY] Set real-time total IRR: 0.6%
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
 🔍 [SUMMARY TAB DEBUG] Sorting ISAs (ISA/JISA) products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting ISAs (ISA/JISA) products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting GIAs products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting GIAs products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] Sorting Pensions products by owner order: {productsCount: 1, productOwnerOrder: Array(1), productOwnerOrderLength: 1, productNames: Array(1), productOwnerNames: Array(1)}
 🔍 [SUMMARY TAB DEBUG] After sorting Pensions products: {sortedProductNames: Array(1), sortedProductOwnerNames: Array(1)}
 🔍 [PRODUCT CARD FILTER DEBUG] Product 29 (GIA): {status: 'inactive', showInactiveProducts: false, hasInShowInactiveProductDetails: false, showInactiveProductDetailsSet: Array(0), shouldShow: false, …}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:2107
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2160
(anonymous) @ IRRHistoryTab.tsx:2209
(anonymous) @ IRRHistoryTab.tsx:1495
IRRHistoryTab @ IRRHistoryTab.tsx:2247
renderWithHooks @ chunk-QYFCA5BS.js:11596
updateFunctionComponent @ chunk-QYFCA5BS.js:14630
beginWork @ chunk-QYFCA5BS.js:15972
beginWork$1 @ chunk-QYFCA5BS.js:19806
performUnitOfWork @ chunk-QYFCA5BS.js:19251
workLoopSync @ chunk-QYFCA5BS.js:19190
renderRootSync @ chunk-QYFCA5BS.js:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js:18728
workLoop @ chunk-QYFCA5BS.js:197
flushWork @ chunk-QYFCA5BS.js:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js:384
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
 🔍 [IRR HISTORY DEBUG] Chart data processing: {chartDataLength: 1, chartDataSample: {…}, productsForChartLength: 3}
 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Global Income) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 6.2 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (BNY Mellon Multi-Asset Balanced) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Fidelity UK Smaller Companies) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (FTF Martin Currie UK Rising Dividends) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 10.6 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Historical Funds) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -4.9 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (RL Sustainable World Trust) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 1.3 for date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 (Stewart Investors Worldwide Leaders ) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 4 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 40% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -2.8 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Vgd LifeStrategy 80% Equity) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: 0 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 28 (Cash) processing: {productSelectedDates: Array(1), hasHistoricalIrr: true, historicalIrrLength: 1}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 28 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 28 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(1)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 28 using historical IRR: -65.2 for date: 2023-04-01
IRRHistoryTab.tsx:1850 🔍 [PRODUCT TOTAL IRR] Product 28 calculating IRR for latest selected date: 2023-04-01
IRRHistoryTab.tsx:1862 🎯 [PRODUCT TOTAL IRR] Product 28 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
IRRHistoryTab.tsx:1915 🔍 [PRODUCT IRR DEBUG] Product 28 - Raw historical IRR data: {productId: 28, selectedDatesFromReport: Array(0), normalizedSelectedDates: Array(0), rawRecordCount: 1, rawRecords: Array(1), …}
IRRHistoryTab.tsx:1959 🚨 [DATA QUALITY WARNING] Product 28 has IDENTICAL IRR values for ALL dates: {repeatedIrrValue: 0.6, dateCount: 1, allDatesWithSameIrr: Array(1), possibleIssues: Array(3)}
(anonymous) @ IRRHistoryTab.tsx:1959
(anonymous) @ IRRHistoryTab.tsx:2065
(anonymous) @ IRRHistoryTab.tsx:1323
IRRHistoryTab @ IRRHistoryTab.tsx:2080
renderWithHooks @ chunk-QYFCA5BS.js?v=cc98fab4:11596
updateFunctionComponent @ chunk-QYFCA5BS.js?v=cc98fab4:14635
beginWork @ chunk-QYFCA5BS.js?v=cc98fab4:15972
beginWork$1 @ chunk-QYFCA5BS.js?v=cc98fab4:19806
performUnitOfWork @ chunk-QYFCA5BS.js?v=cc98fab4:19251
workLoopSync @ chunk-QYFCA5BS.js?v=cc98fab4:19190
renderRootSync @ chunk-QYFCA5BS.js?v=cc98fab4:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js?v=cc98fab4:18728
workLoop @ chunk-QYFCA5BS.js?v=cc98fab4:197
flushWork @ chunk-QYFCA5BS.js?v=cc98fab4:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js?v=cc98fab4:384
IRRHistoryTab.tsx:2019 ⚠️ [PRODUCT IRR WARNING] Product 28 has no IRR data for any selected dates. 
Original selected dates: 
Normalized selected dates: 
Available database dates: 2023-04-01
(anonymous) @ IRRHistoryTab.tsx:2019
(anonymous) @ IRRHistoryTab.tsx:2065
(anonymous) @ IRRHistoryTab.tsx:1323
IRRHistoryTab @ IRRHistoryTab.tsx:2080
renderWithHooks @ chunk-QYFCA5BS.js?v=cc98fab4:11596
updateFunctionComponent @ chunk-QYFCA5BS.js?v=cc98fab4:14635
beginWork @ chunk-QYFCA5BS.js?v=cc98fab4:15972
beginWork$1 @ chunk-QYFCA5BS.js?v=cc98fab4:19806
performUnitOfWork @ chunk-QYFCA5BS.js?v=cc98fab4:19251
workLoopSync @ chunk-QYFCA5BS.js?v=cc98fab4:19190
renderRootSync @ chunk-QYFCA5BS.js?v=cc98fab4:19169
performConcurrentWorkOnRoot @ chunk-QYFCA5BS.js?v=cc98fab4:18728
workLoop @ chunk-QYFCA5BS.js?v=cc98fab4:197
flushWork @ chunk-QYFCA5BS.js?v=cc98fab4:176
performWorkUntilDeadline @ chunk-QYFCA5BS.js?v=cc98fab4:384
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (FGF Balanced S2) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -2.1 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Balanced Index) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 2.2 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (LV= Smoothed Managed Balanced) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: -6.8 for date: 2023-04-01
IRRHistoryTab.tsx:1749 🔍 [CURRENT AVERAGE RETURN] Product 30 (Cash) processing: {productSelectedDates: Array(2), hasHistoricalIrr: true, historicalIrrLength: 2}
IRRHistoryTab.tsx:1761 🔍 [CURRENT AVERAGE RETURN] Product 30 latest selected date: 2023-04-01
IRRHistoryTab.tsx:1771 🔍 [CURRENT AVERAGE RETURN] Product 30 historical lookup result: {latestSelectedDate: '2023-04-01', historicalRecord: {…}, availableHistoricalDates: Array(2)}
IRRHistoryTab.tsx:1781 🎯 [CURRENT AVERAGE RETURN] Product 30 using historical IRR: 0 for date: 2023-04-01
IRRHistoryTab.tsx:1850 🔍 [PRODUCT TOTAL IRR] Product 30 calculating IRR for latest selected date: 2023-04-01
IRRHistoryTab.tsx:1862 🎯 [PRODUCT TOTAL IRR] Product 30 using historical IRR: 0.6 for date: 2023-04-01 (instead of current IRR from portfolioIrrValues)
IRRHistoryTab.tsx:1915 🔍 [PRODUCT IRR DEBUG] Product 30 - Raw historical IRR data: {productId: 30, selectedDatesFromReport: Array(1), normalizedSelectedDates: Array(1), rawRecordCount: 2, rawRecords: Array(2), …}
IRRHistoryTab.tsx:1990 🔍 [INDIVIDUAL CARD DEBUG] Product 30 storing IRR for date 2022-02-01: 6.3% (from portfolio_historical_irr table)
IRRHistoryTab.tsx:2053 🔍 [INDIVIDUAL CARD DISPLAY] Product 30 displaying IRR for date 2022-02-01: 6.3% (formatted: 6.3%)
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
IRRHistorySummaryTable.tsx:338 🔍 [IRR SUMMARY DEBUG] Looking for productId: 30, date: 2022-02-01
IRRHistorySummaryTable.tsx:339 🔍 [IRR SUMMARY DEBUG] Available productRows: (3) [{…}, {…}, {…}]
IRRHistorySummaryTable.tsx:350 🔍 [IRR SUMMARY DEBUG] Found row for productId 30, date 2022-02-01: {product_id: 30, product_name: 'Flexible Transitions Account', irr_date: '2022-02-01', irr_result: 6.3, portfolio_id: undefined}
IRRHistorySummaryTable.tsx:359 🔍 [IRR SUMMARY DEBUG] Returning IRR for productId 30, date 2022-02-01: 6.3
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
IRRHistorySummaryTable.tsx:441 🎯 [CLIENT GROUP RISK] Calculated client group weight risk: {productCount: 3, totalValue: 541681, weightedRiskSum: 1969263.9399999997, calculatedRisk: '3.6', productBreakdown: Array(3)}
IRRHistorySummaryTable.tsx:397 📊 [IRR SUMMARY] Using backend IRR for date 2022-02-01: 6.3% (calculated from portfolios with valuations)
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 28, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 28, product_name: 'Stocks & Shares ISA', provider_name: 'AJBell', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - ISA - SCC955813
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 30, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 30, product_name: 'Flexible Transitions Account', provider_name: 'LV', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: LV - Pension - 601554
IRRHistorySummaryTable.tsx:338 🔍 [IRR SUMMARY DEBUG] Looking for productId: 30, date: 2022-02-01
IRRHistorySummaryTable.tsx:339 🔍 [IRR SUMMARY DEBUG] Available productRows: (3) [{…}, {…}, {…}]
IRRHistorySummaryTable.tsx:350 🔍 [IRR SUMMARY DEBUG] Found row for productId 30, date 2022-02-01: {product_id: 30, product_name: 'Flexible Transitions Account', irr_date: '2022-02-01', irr_result: 6.3, portfolio_id: undefined}
IRRHistorySummaryTable.tsx:359 🔍 [IRR SUMMARY DEBUG] Returning IRR for productId 30, date 2022-02-01: 6.3
productTitleUtils.ts:184 🔍 [PRODUCT TITLE DEBUG] generateEffectiveProductTitle called for product: {id: 29, customTitlesSize: 0, hasCustomTitle: false}
productTitleUtils.ts:197 🔍 [PRODUCT TITLE DEBUG] No custom title, generating default...
productTitleUtils.ts:139 🔍 [PRODUCT TITLE DEBUG] generateDefaultProductTitle called for product: {id: 29, product_name: 'GIA', provider_name: 'AJBell', omitOwner: true}
productTitleUtils.ts:169 🔍 [PRODUCT TITLE DEBUG] Owner omitted from title
productTitleUtils.ts:172 🔍 [PRODUCT TITLE DEBUG] Final title: AJBell - GIA - SCC955813
IRRHistorySummaryTable.tsx:441 🎯 [CLIENT GROUP RISK] Calculated client group weight risk: {productCount: 3, totalValue: 541681, weightedRiskSum: 1969263.9399999997, calculatedRisk: '3.6', productBreakdown: Array(3)}
IRRHistorySummaryTable.tsx:397 📊 [IRR SUMMARY] Using backend IRR for date 2022-02-01: 6.3% (calculated from portfolios with valuations)
